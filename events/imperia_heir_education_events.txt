namespace = imperia_heir_education
# Birth - choose a warden
imperia_heir_education.1 = {
	type = country_event
	title = imperia_heir_education.1.t
	desc = imperia_heir_education.1.desc
	flavor = imperia_heir_education.1.f
	duration = 3
	gui_window = event_window_1char_tabloid
	left_icon = scope:heir_scope
	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	on_opened_soundeffect = "event:/SFX/Events/misc/1Character_Banner"
	icon = "gfx/interface/icons/event_icons/event_newspaper.dds"
	trigger = {
		# Only pop if your heirs country is you
		# Just so no shenanigans happens with PUs
		heir.owner = this
	}
	immediate = {
		# Is used in the picture frame, but also from here on to make sure no double-heir-event shenanigans happens, in case one dies in the crib
		heir = {
			save_scope_as = heir_scope
		}
		trigger_event = {
			id = imperia_heir_education.3
			days = 5844 # 16 years
		}
	}
	# Raise the child yourself
	option = {
		name = imperia_heir_education.1.a
		default_option = yes
		heir = {
			set_variable = raised_by_ruler
		}
		ai_chance = {
			base = 100
		}
	}
	# Let the clergy raise the child (if you have a state-sponsored church)
	option = {
		trigger = {
			OR = {
				has_law = law_type:law_state_religion
				has_law = law_type:law_freedom_of_conscience
			}
			ruler != ig:ig_devout.leader
		}
		name = imperia_heir_education.1.b
		heir = {
			set_variable = raised_by_clergy
		}
		ai_chance = {
			base = 100
			modifier = {
				trigger = {
					ig:ig_devout = {
						is_marginal = yes
					}
				}
				add = -90
			}
			modifier = {
				trigger = {
					ig:ig_devout = {
						is_powerful = yes
					}
				}
				add = 900
			}
		}
	}
	# Let the nobility raise the child
	option = {
		name = imperia_heir_education.1.c
		trigger = {
			ruler != ig:ig_landowners.leader
		}
		heir = {
			set_variable = raised_by_nobles
		}
		ai_chance = {
			base = 100
			modifier = {
				trigger = {
					ig:ig_landowners = {
						is_marginal = yes
					}
				}
				add = -90
			}
			modifier = {
				trigger = {
					ig:ig_landowners = {
						is_powerful = yes
					}
				}
				add = 900
			}
		}
	}
	# Let the servants and burghers raise the child
	option = {
		name = imperia_heir_education.1.d
		trigger = {
			ruler != ig:ig_petty_bourgeoisie.leader
		}
		heir = {
			set_variable = raised_by_burghers
		}
		ai_chance = {
			base = 100
			modifier = {
				trigger = {
					ig:ig_petty_bourgeoisie = {
						is_marginal = yes
					}
				}
				add = -90
			}
			modifier = {
				trigger = {
					ig:ig_petty_bourgeoisie = {
						is_powerful = yes
					}
				}
				add = 900
			}
		}
	}
}

# Choose your next education ideology
imperia_heir_education.2 = {
	type = country_event
	title = imperia_heir_education.2.title
	desc = imperia_heir_education.2.desc
	flavor = imperia_heir_education.2.flavor
	duration = 3
	gui_window = event_window_2char
	right_icon = scope:warden_scope
	left_icon = heir
	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	on_opened_soundeffect = "event:/SFX/Events/misc/1Character_Banner"
	icon = "gfx/interface/icons/event_icons/event_newspaper.dds"
	immediate = {
		# Is used in the picture frame, but also from here on to make sure no double-heir-event shenanigans happens, in case one dies
		heir = {
			save_scope_as = heir_scope
			ideology = {
				save_scope_as = current_ideology
			}
			if = {
				limit = {
					has_variable = raised_by_ruler
				}
				root.ruler = {
					save_scope_as = warden_scope
				}
			}
			else_if = {
				limit = {
					has_variable = raised_by_clergy
				}
				root.ig:ig_devout.leader = {
					save_scope_as = warden_scope
				}
			}
			else_if = {
				limit = {
					has_variable = raised_by_nobles
				}
				root.ig:ig_landowners.leader = {
					save_scope_as = warden_scope
				}
			}
			else_if = {
				limit = {
					has_variable = raised_by_burghers
				}
				root.ig:ig_petty_bourgeoisie.leader = {
					save_scope_as = warden_scope
				}
			}
			else = {
				root = {
					random_scope_character = {
						save_scope_as = warden_scope
					}
				}
			}
		}
	}
	# Stay on current
	option = {
		name = imperia_heir_education.2.stay
		heir = {
			set_variable = warden_maintains_education_status_quo
			set_variable = {
				name = warden_selected_ideology
				value = scope:current_ideology
			}
		}
		ai_chance = {
			base = 100
		}
	}
	# Social Democrat
	option = {
		name = imperia_heir_education.2.aa
		trigger = {
			scope:current_ideology = {
				OR = {
					this = ideology:ideology_humanitarian
					this = ideology:ideology_radical
					this = ideology:ideology_feminist
					this = ideology:ideology_liberal_leader
				}
			}
			has_technology_researched = socialism
		}
		heir = {
			set_variable = {
				name = warden_selected_ideology
				value = ideology:ideology_social_democrat
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				trigger = {
					scope:warden_scope = {
						has_ideology = ideology:ideology_social_democrat
					}
				}
				add = 100
			}
		}
	}
	# Democrat (liberal leader)
	option = {
		name = imperia_heir_education.2.ab
		trigger = {
			scope:current_ideology = {
				OR = {
					this = ideology:ideology_market_liberal
					this = ideology:ideology_feminist
					this = ideology:ideology_social_democrat
				}
			}
		}
		heir = {
			set_variable = {
				name = warden_selected_ideology
				value = ideology:ideology_liberal_leader
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				trigger = {
					scope:warden_scope = {
						has_ideology = ideology:ideology_liberal_leader
					}
				}
				add = 100
			}
		}
	}
	# Humanitarian
	option = {
		name = imperia_heir_education.2.ac
		trigger = {
			scope:current_ideology = {
				OR = {
					this = ideology:ideology_social_democrat
					this = ideology:ideology_positivist
					this = ideology:ideology_abolitionist
					AND = {
						root = {
							OR = {
								NOT = {
									has_law = law_type:law_slavery_banned
								}
								has_law = law_type:law_serfdom
							}
						}
						this = ideology:ideology_pacifist
					}
				}
			}
			has_technology_researched = feminism
		}
		heir = {
			set_variable = {
				name = warden_selected_ideology
				value = ideology:ideology_humanitarian
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				trigger = {
					scope:warden_scope = {
						has_ideology = ideology:ideology_humanitarian
					}
				}
				add = 100
			}
		}
	}
	# Feminist
	option = {
		name = imperia_heir_education.2.ad
		trigger = {
			scope:current_ideology = {
				OR = {
					this = ideology:ideology_social_democrat
					this = ideology:ideology_liberal_leader
					this = ideology:ideology_radical
				}
			}
			has_technology_researched = feminism
			NOT = {
				has_law = law_type:law_womens_suffrage
			}
		}
		heir = {
			set_variable = {
				name = warden_selected_ideology
				value = ideology:ideology_feminist
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				trigger = {
					scope:warden_scope = {
						has_ideology = ideology:ideology_feminist
					}
				}
				add = 100
			}
			modifier = {
				trigger = {
					scope:warden_scope = {
						is_female = yes
					}
				}
				add = 100
			}
		}
	}
	# Abolitionist
	option = {
		name = imperia_heir_education.2.ae
		trigger = {
			scope:current_ideology = {
				OR = {
					this = ideology:ideology_humanitarian
					this = ideology:ideology_radical
					this = ideology:ideology_pacifist
				}
			}
			OR = {
				NOT = {
					has_law = law_type:law_slavery_banned
				}
				has_law = law_type:law_serfdom
			}
		}
		heir = {
			set_variable = {
				name = warden_selected_ideology
				value = ideology:ideology_abolitionist
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				trigger = {
					scope:warden_scope = {
						has_ideology = ideology:ideology_abolitionist
					}
				}
				add = 100
			}
		}
	}
	# Market Liberal
	option = {
		name = imperia_heir_education.2.af
		trigger = {
			scope:current_ideology = {
				OR = {
					this = ideology:ideology_reformer
					this = ideology:ideology_land_reformer
					this = ideology:ideology_feminist
					this = ideology:ideology_liberal_leader
				}
			}
			has_technology_researched = stock_exchange
		}
		heir = {
			set_variable = {
				name = warden_selected_ideology
				value = ideology:ideology_market_liberal
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				trigger = {
					scope:warden_scope = {
						has_ideology = ideology:ideology_market_liberal
					}
				}
				add = 100
			}
		}
	}
	# Pacifist
	option = {
		name = imperia_heir_education.2.ba
		trigger = {
			scope:current_ideology = {
				OR = {
					this = ideology:ideology_abolitionist
					this = ideology:ideology_reformer
					this = ideology:ideology_luddite
					AND = {
						root = {
							OR = {
								NOT = {
									has_law = law_type:law_slavery_banned
								}
								has_law = law_type:law_serfdom
							}
						}
						this = ideology:ideology_humanitarian
					}
					# If feminism is unlocked, Reformer is locked. Meaning you have to go to Pacifism through moderate
					AND = {
						root = {
							has_technology_researched = feminism
						}
						this = ideology:ideology_moderate
					}
				}
			}
		}
		heir = {
			set_variable = {
				name = warden_selected_ideology
				value = ideology:ideology_pacifist
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				trigger = {
					scope:warden_scope = {
						has_ideology = ideology:ideology_pacifist
					}
				}
				add = 100
			}
		}
	}
	# Reformer
	option = {
		name = imperia_heir_education.2.bb
		trigger = {
			scope:current_ideology = {
				OR = {
					this = ideology:ideology_abolitionist
					this = ideology:ideology_pacifist
					this = ideology:ideology_market_liberal
					this = ideology:ideology_moderate
					this = ideology:ideology_land_reformer
				}
			}
			has_technology_researched = egalitarianism
			NOT = {
				has_technology_researched = feminism
			}
		}
		heir = {
			set_variable = {
				name = warden_selected_ideology
				value = ideology:ideology_reformer
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				trigger = {
					scope:warden_scope = {
						has_ideology = ideology:ideology_reformer
					}
				}
				add = 100
			}
		}
	}
	# Luddite
	option = {
		name = imperia_heir_education.2.bc
		trigger = {
			scope:current_ideology = {
				OR = {
					this = ideology:ideology_slaver
					this = ideology:ideology_pacifist
					AND = {
						root = {
							OR = {
								NOT = {
									has_law = law_type:law_slavery_banned
								}
								has_law = law_type:law_serfdom
							}
						}
						this = ideology:ideology_traditionalist
					}
				}
			}
			has_technology_researched = romanticism
			OR = {
				has_law = law_type:law_command_economy
				has_law = law_type:law_laissez_faire
				has_law = law_type:law_interventionism
			}
		}
		heir = {
			set_variable = {
				name = warden_selected_ideology
				value = ideology:ideology_luddite
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				trigger = {
					scope:warden_scope = {
						has_ideology = ideology:ideology_luddite
					}
				}
				add = 100
			}
		}
	}
	# Moderate
	option = {
		name = imperia_heir_education.2.bd
		trigger = {
			scope:current_ideology = {
				OR = {
					this = ideology:ideology_reformer
					this = ideology:ideology_land_reformer
					this = ideology:ideology_traditionalist
				}
				# If feminism is unlocked, Reformer is locked. Meaning you have to go to Moderate through pacifist
				AND = {
					root = {
						has_technology_researched = feminism
					}
					this = ideology:ideology_pacifist
				}
			}
		}
		heir = {
			set_variable = {
				name = warden_selected_ideology
				value = ideology:ideology_moderate
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				trigger = {
					scope:warden_scope = {
						has_ideology = ideology:ideology_moderate
					}
				}
				add = 100
			}
		}
	}
	# Land reformer
	option = {
		name = imperia_heir_education.2.be
		trigger = {
			scope:current_ideology = {
				OR = {
					this = ideology:ideology_reformer
					this = ideology:ideology_market_liberal
					this = ideology:ideology_moderate
					this = ideology:ideology_traditionalist
				}
			}
			has_technology_researched = enclosure
		}
		heir = {
			set_variable = {
				name = warden_selected_ideology
				value = ideology:ideology_land_reformer
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				trigger = {
					scope:warden_scope = {
						has_ideology = ideology:ideology_land_reformer
					}
				}
				add = 100
			}
		}
	}
	# Corporatist
	option = {
		name = imperia_heir_education.2.bf
		trigger = {
			scope:current_ideology = ideology:ideology_theocrat
			has_technology_researched = corporatism
		}
		heir = {
			set_variable = {
				name = warden_selected_ideology
				value = ideology:ideology_corporatist_leader
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				trigger = {
					scope:warden_scope = {
						has_ideology = ideology:ideology_corporatist_leader
					}
				}
				add = 100
			}
		}
	}
	# Slavery
	option = {
		name = imperia_heir_education.2.ca
		trigger = {
			scope:current_ideology = {
				OR = {
					this = ideology:ideology_reformer
					this = ideology:ideology_market_liberal
					this = ideology:ideology_moderate
					this = ideology:ideology_traditionalist
				}
			}
			NOT = {
				has_law = law_type:law_slavery_banned
			}
		}
		heir = {
			set_variable = {
				name = warden_selected_ideology
				value = ideology:ideology_slaver
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				trigger = {
					scope:warden_scope = {
						has_ideology = ideology:ideology_slaver
					}
				}
				add = 100
			}
		}
	}
	# Traditionalist
	option = {
		name = imperia_heir_education.2.cb
		trigger = {
			scope:current_ideology = {
				OR = {
					this = ideology:ideology_moderate
					this = ideology:ideology_land_reformer
					this = ideology:ideology_slaver
					this = ideology:ideology_jingoist_leader
					AND = {
						root = {
							has_law = law_type:law_slavery_banned
						}
						this = ideology:ideology_luddite
					}
				}
			}
		}
		heir = {
			set_variable = {
				name = warden_selected_ideology
				value = ideology:ideology_traditionalist
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				trigger = {
					scope:warden_scope = {
						has_ideology = ideology:ideology_traditionalist
					}
				}
				add = 100
			}
		}
	}
	# Jingoist
	option = {
		name = imperia_heir_education.2.cc
		trigger = {
			scope:current_ideology = {
				OR = {
					this = ideology:ideology_traditionalist
					this = ideology:ideology_authoritarian
					this = ideology:ideology_fascist
				}
			}
		}
		heir = {
			set_variable = {
				name = warden_selected_ideology
				value = ideology:ideology_jingoist_leader
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				trigger = {
					scope:warden_scope = {
						has_ideology = ideology:ideology_jingoist_leader
					}
				}
				add = 100
			}
		}
	}
	# Theocrat
	option = {
		name = imperia_heir_education.2.cd
		trigger = {
			scope:current_ideology = {
				OR = {
					this = ideology:ideology_traditionalist
					this = ideology:ideology_authoritarian
					this = ideology:ideology_corporatist_leader
				}
			}
		}
		heir = {
			set_variable = {
				name = warden_selected_ideology
				value = ideology:ideology_theocrat
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				trigger = {
					scope:warden_scope = {
						has_ideology = ideology:ideology_theocrat
					}
				}
				add = 100
			}
		}
	}
	# Authoritarian
	option = {
		name = imperia_heir_education.2.ce
		trigger = {
			scope:current_ideology = {
				OR = {
					this = ideology:ideology_traditionalist
					this = ideology:ideology_theocrat
					this = ideology:ideology_jingoist
					this = ideology:ideology_fascist
					this = ideology:ideology_royalist
				}
			}
		}
		heir = {
			set_variable = {
				name = warden_selected_ideology
				value = ideology:ideology_authoritarian
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				trigger = {
					scope:warden_scope = {
						has_ideology = ideology:ideology_authoritarian
					}
				}
				add = 100
			}
		}
	}
	# Fascist
	option = {
		name = imperia_heir_education.2.cf
		trigger = {
			scope:current_ideology = {
				OR = {
					this = ideology:ideology_jingoist
					this = ideology:ideology_authoritarian
					this = ideology:ideology_ethno_nationalist
					this = ideology:ideology_integralist
					this = ideology:ideology_royalist
				}
			}
			has_technology_researched = political_agitation
		}
		heir = {
			set_variable = {
				name = warden_selected_ideology
				value = ideology:ideology_fascist
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				trigger = {
					scope:warden_scope = {
						has_ideology = ideology:ideology_fascist
					}
				}
				add = 100
			}
		}
	}
	# Ethno-nationalist
	option = {
		name = imperia_heir_education.2.da
		trigger = {
			scope:current_ideology = {
				OR = {
					this = ideology:ideology_fascist
					this = ideology:ideology_integralist
				}
			}
			has_technology_researched = pan-nationalism
		}
		heir = {
			set_variable = {
				name = warden_selected_ideology
				value = ideology:ideology_ethno_nationalist
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				trigger = {
					scope:warden_scope = {
						has_ideology = ideology:ideology_ethno_nationalist
					}
				}
				add = 100
			}
		}
	}
	# Royalist
	option = {
		name = imperia_heir_education.2.db
		trigger = {
			scope:current_ideology = {
				OR = {
					this = ideology:ideology_authoritarian
					this = ideology:ideology_humanitarian_royalist
					this = ideology:ideology_integralist
				}
			}
		}
		heir = {
			set_variable = {
				name = warden_selected_ideology
				value = ideology:ideology_royalist
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				trigger = {
					scope:warden_scope = {
						has_ideology = ideology:ideology_royalist
					}
				}
				add = 100
			}
		}
	}
	# Integralist
	option = {
		name = imperia_heir_education.2.dc
		trigger = {
			scope:current_ideology = {
				OR = {
					this = ideology:ideology_fascist
					this = ideology:ideology_ethno_nationalist
					this = ideology:ideology_royalist
				}
			}
			has_technology_researched = corporatism
			any_primary_culture = {
				OR = {
					has_discrimination_trait = lusophone
					has_discrimination_trait = hispanophone
					has_discrimination_trait = francophone
				}
			}
		}
		heir = {
			set_variable = {
				name = warden_selected_ideology
				value = ideology:ideology_integralist
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				trigger = {
					scope:warden_scope = {
						has_ideology = ideology:ideology_integralist
					}
				}
				add = 100
			}
		}
	}
	# Humanitarian Royalist
	option = {
		name = imperia_heir_education.2.dd
		trigger = {
			scope:current_ideology = ideology:ideology_royalist
			has_technology_researched = feminism
		}
		heir = {
			set_variable = {
				name = warden_selected_ideology
				value = ideology:ideology_humanitarian_royalist
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				trigger = {
					scope:warden_scope = {
						has_ideology = ideology:ideology_humanitarian_royalist
					}
				}
				add = 100
			}
		}
	}
}

# Hidden event for fact-checking that the heir is infact 16 years old and is the correct one.
# Well, in .13 at least
imperia_heir_education.3 = {
	type = country_event
	hidden = yes
	immediate = {
		trigger_event = {
			id = imperia_heir_education.13
		}
	}
}

# Hidden event for cultural and religious conversion
imperia_heir_education.4 = {
	type = country_event
	hidden = yes
	trigger = {
		any_scope_character = {
			is_heir = yes
			# Only pop if you're the actual "parent" of the child; no PUs should get this
			owner = prev
			# Needs to be of sufficient age..
			age >= 4
			has_trait = trait_child
			# Only pop if the warden has a different culture/religion
			OR = {
				AND = {
					# clergy leaders religion or faith is not the same as the heirs religion / faith
					has_variable = raised_by_clergy
					OR = {
						owner.ig:ig_devout.leader.culture != this.culture
						owner.ig:ig_devout.leader.religion != this.religion
					}
				}
				AND = {
					# landowners leaders religion or faith is not the same as the heirs religion / faith
					has_variable = raised_by_nobles
					OR = {
						owner.ig:ig_landowners.leader.culture != this.culture
						owner.ig:ig_landowners.leader.religion != this.religion
					}
				}
				AND = {
					# clergy leaders religion or faith is not the same as the heirs religion / faith
					has_variable = raised_by_burghers
					OR = {
						owner.ig:ig_petty_bourgeoisie.leader.culture != this.culture
						owner.ig:ig_petty_bourgeoisie.leader.religion != this.religion
					}
				}
				AND = {
					# landowners leaders religion or faith is not the same as the heirs religion / faith
					has_variable = raised_by_ruler
					OR = {
						owner.ruler.culture != this.culture
						owner.ruler.religion != this.religion
					}
				}
			}
		}
	}
	immediate = {
		# First we get a scope on the warden & heir
		heir = {
			save_scope_as = heir_scope
			if = {
				limit = {
					has_variable = raised_by_clergy
				}
				owner.ig:ig_devout.leader = {
					save_scope_as = warden_scope
				}
			}
			else_if = {
				limit = {
					has_variable = raised_by_nobles
				}
				owner.ig:ig_landowners.leader = {
					save_scope_as = warden_scope
				}
			}
			else_if = {
				limit = {
					has_variable = raised_by_burghers
				}
				owner.ig:ig_petty_bourgeoisie.leader = {
					save_scope_as = warden_scope
				}
			}
			else_if = {
				limit = {
					has_variable = raised_by_ruler
				}
				owner.ruler = {
					save_scope_as = warden_scope
				}
			}
			# This section is mostly stolen from CK3 :^)
			if = {
				limit = {
					scope:warden_scope.religion != this.religion
				}
				set_variable = {
					name = education_faith_conversion_chance
					value = imperia_heir_education_conversion_chance
				}
				random = {
					chance = var:education_faith_conversion_chance
					set_variable = convert_faith
				}
			}
			if = {
				limit = {
					scope:warden_scope.culture != this.culture
				}
				# Has half the % of success as religion conversion
				set_variable = {
					name = education_culture_conversion_chance
					value = {
						value = imperia_heir_education_conversion_chance
						divide = 2
					}
				}
				random = {
					chance = var:education_culture_conversion_chance
					set_variable = convert_culture
				}
			}
			# Check for conversion and pop event if its there!
			if = {
				limit = {
					OR = {
						has_variable = convert_faith
						has_variable = convert_culture
					}
				}
				owner = {
					trigger_event = {
						id = imperia_heir_education.5
						# 60 day delay to make sure it doesnt clash with the skill development events
						days = 60
					}
				}
			}
		}
	}
}

# Actual Event for cultural and religious conversion
imperia_heir_education.5 = {
	type = country_event
	title = {
		first_valid = {
			triggered_desc = {
				desc = imperia_heir_education.5.titleBoth
				trigger = {
					scope:heir_scope = {
						has_variable = convert_faith
						has_variable = convert_culture
					}
				}
			}
			triggered_desc = {
				desc = imperia_heir_education.5.titleRel
				trigger = {
					scope:heir_scope = {
						has_variable = convert_faith
					}
				}
			}
			triggered_desc = {
				desc = imperia_heir_education.5.titleCult
				trigger = {
					scope:heir_scope = {
						has_variable = convert_culture
					}
				}
			}
		}
	}
	desc = {
		first_valid = {
			triggered_desc = {
				desc = imperia_heir_education.5.descBoth
				trigger = {
					scope:heir_scope = {
						has_variable = convert_faith
						has_variable = convert_culture
					}
				}
			}
			triggered_desc = {
				desc = imperia_heir_education.5.descRel
				trigger = {
					scope:heir_scope = {
						has_variable = convert_faith
					}
				}
			}
			triggered_desc = {
				desc = imperia_heir_education.5.descCult
				trigger = {
					scope:heir_scope = {
						has_variable = convert_culture
					}
				}
			}
		}
	}
	flavor = imperia_heir_education.5.flavor
	duration = 3
	gui_window = event_window_2char
	right_icon = scope:warden_scope
	left_icon = scope:heir_scope
	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	on_opened_soundeffect = "event:/SFX/Events/misc/1Character_Banner"
	icon = "gfx/interface/icons/event_icons/event_newspaper.dds"
	immediate = {
		# First we get a scope on the warden
		random_scope_character = {
			limit = {
				is_heir = yes
			}
			save_scope_as = heir_scope
			if = {
				limit = {
					has_variable = raised_by_clergy
				}
				owner.ig:ig_devout.leader = {
					save_scope_as = warden_scope
				}
			}
			else_if = {
				limit = {
					has_variable = raised_by_nobles
				}
				owner.ig:ig_landowners.leader = {
					save_scope_as = warden_scope
				}
			}
			else_if = {
				limit = {
					has_variable = raised_by_burghers
				}
				owner.ig:ig_petty_bourgeoisie.leader = {
					save_scope_as = warden_scope
				}
			}
			else_if = {
				limit = {
					has_variable = raised_by_ruler
				}
				owner.ruler = {
					save_scope_as = warden_scope
				}
			}
		}
	}
	option = {
		name = imperia_heir_education.5.a
		scope:heir_scope = {
			if = {
				limit = {
					has_variable = convert_faith
				}
				change_character_religion = scope:warden_scope.religion
			}
			if = {
				limit = {
					has_variable = convert_culture
				}
				change_character_culture = scope:warden_scope.culture
			}
		}
	}
}

# Hidden event for early positive personality trait
imperia_heir_education.6 = {
	type = country_event
	hidden = yes
	trigger = {
		any_scope_character = {
			is_heir = yes
			# Only pop if you're the actual "parent" of the child; no PUs should get this
			owner = prev
			# Needs to be age 6, and only age 6. Only pops once
			age = 6
			# ... And needs to be a character thats been followed since birth.
			OR = {
				has_variable = raised_by_clergy
				has_variable = raised_by_nobles
				has_variable = raised_by_burghers
				has_variable = raised_by_ruler
			}
		}
	}
	immediate = {
		# First we get a scope on the warden & heir
		random_scope_character = {
			limit = {
				is_heir = yes
			}
			save_scope_as = heir_scope
			if = {
				limit = {
					has_variable = raised_by_clergy
				}
				owner.ig:ig_devout.leader = {
					save_scope_as = warden_scope
				}
			}
			else_if = {
				limit = {
					has_variable = raised_by_nobles
				}
				owner.ig:ig_landowners.leader = {
					save_scope_as = warden_scope
				}
			}
			else_if = {
				limit = {
					has_variable = raised_by_burghers
				}
				owner.ig:ig_petty_bourgeoisie.leader = {
					save_scope_as = warden_scope
				}
			}
			else_if = {
				limit = {
					has_variable = raised_by_ruler
				}
				owner.ruler = {
					save_scope_as = warden_scope
				}
			}
			# get 3 random positive personality traits (meaning they GIVE popularity)
			# .. But only if raised by the ruler.
			if = {
				limit = {
					has_variable = raised_by_ruler
				}
				imperia_load_heir_positive_personality_trait = yes
				imperia_load_heir_positive_personality_trait = yes
				imperia_load_heir_positive_personality_trait = yes
				# Pop a choice event for the player
				owner = {
					trigger_event = {
						id = imperia_heir_education.7
					}
				}
			}
			# The AI will choose randomly
			else = {
				random_list = {
					1 = {
						modifier = {
							if = {
								limit = {
									OR = {
										has_modifier = modifier_kid_trait_direct
										has_variable = education_is_offered_direct_trait
									}
								}
								add = -4
							}
							if = {
								limit = {
									scope:warden_scope = {
										has_trait = direct
									}
								}
								add = 3
							}
						}
						add_modifier = {
							name = modifier_kid_trait_direct
						}
					}
					1 = {
						modifier = {
							if = {
								limit = {
									OR = {
										has_modifier = modifier_kid_trait_brave
										has_variable = education_is_offered_brave_trait
									}
								}
								add = -4
							}
							if = {
								limit = {
									scope:warden_scope = {
										has_trait = brave
									}
								}
								add = 3
							}
						}
						add_modifier = {
							name = modifier_kid_trait_brave
						}
					}
					1 = {
						modifier = {
							if = {
								limit = {
									OR = {
										has_modifier = modifier_kid_trait_charismatic
										has_variable = education_is_offered_charismatic_trait
									}
								}
								add = -4
							}
							if = {
								limit = {
									scope:warden_scope = {
										has_trait = charismatic
									}
								}
								add = 3
							}
						}
						add_modifier = {
							name = modifier_kid_trait_charismatic
						}
					}
					1 = {
						modifier = {
							if = {
								limit = {
									OR = {
										has_modifier = modifier_kid_trait_ambitious
										has_variable = education_is_offered_ambitious_trait
									}
								}
								add = -4
							}
							if = {
								limit = {
									scope:warden_scope = {
										has_trait = ambitious
									}
								}
								add = 3
							}
						}
						add_modifier = {
							name = modifier_kid_trait_ambitious
						}
					}
					1 = {
						modifier = {
							if = {
								limit = {
									OR = {
										has_modifier = modifier_kid_trait_honorable
										has_variable = education_is_offered_honorable_trait
									}
								}
								add = -4
							}
							if = {
								limit = {
									scope:warden_scope = {
										has_trait = honorable
									}
								}
								add = 3
							}
						}
						add_modifier = {
							name = modifier_kid_trait_honorable
						}
					}
					1 = {
						modifier = {
							if = {
								limit = {
									OR = {
										has_modifier = modifier_kid_trait_reckless
										has_variable = education_is_offered_reckless_trait
									}
								}
								add = -4
							}
							if = {
								limit = {
									scope:warden_scope = {
										has_trait = reckless
									}
								}
								add = 3
							}
						}
						add_modifier = {
							name = modifier_kid_trait_reckless
						}
					}
				}
			}
		}
		post_notification = imperia_heir_acquired_trait_from_warden_upbringing_notification
	}
}

# Actual Event for early positive personality trait
imperia_heir_education.7 = {
	type = country_event
	title = imperia_heir_education.7.title
	desc = imperia_heir_education.7.desc
	flavor = imperia_heir_education.7.flavor
	duration = 3
	gui_window = event_window_2char
	right_icon = scope:warden_scope
	left_icon = scope:heir_scope
	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	on_opened_soundeffect = "event:/SFX/Events/misc/1Character_Banner"
	icon = "gfx/interface/icons/event_icons/event_newspaper.dds"
	immediate = {
		# First we get a scope on the warden & heir
		random_scope_character = {
			limit = {
				is_heir = yes
			}
			save_scope_as = heir_scope
		}
		# This only pops when the ruler is the warden
		ruler = {
			save_scope_as = warden_scope
		}
	}
	option = {
		name = imperia_heir_education.7.direct
		trigger = {
			scope:heir_scope = {
				has_variable = education_is_offered_direct_trait
			}
		}
		scope:heir_scope = {
			add_modifier = {
				name = modifier_kid_trait_direct
			}
		}
		ai_chance = {
			base = 1
			modifier = {
				trigger = {
					scope:warden_scope = {
						has_trait = direct
					}
				}
				add = 3
			}
		}
	}
	option = {
		name = imperia_heir_education.7.brave
		trigger = {
			scope:heir_scope = {
				has_variable = education_is_offered_brave_trait
			}
		}
		scope:heir_scope = {
			add_modifier = {
				name = modifier_kid_trait_brave
			}
		}
		ai_chance = {
			base = 1
			modifier = {
				trigger = {
					scope:warden_scope = {
						has_trait = brave
					}
				}
				add = 3
			}
		}
	}
	option = {
		name = imperia_heir_education.7.charismatic
		trigger = {
			scope:heir_scope = {
				has_variable = education_is_offered_charismatic_trait
			}
		}
		scope:heir_scope = {
			add_modifier = {
				name = modifier_kid_trait_charismatic
			}
		}
		ai_chance = {
			base = 1
			modifier = {
				trigger = {
					scope:warden_scope = {
						has_trait = charismatic
					}
				}
				add = 3
			}
		}
	}
	option = {
		name = imperia_heir_education.7.ambitious
		trigger = {
			scope:heir_scope = {
				has_variable = education_is_offered_ambitious_trait
			}
		}
		scope:heir_scope = {
			add_modifier = {
				name = modifier_kid_trait_ambitious
			}
		}
		ai_chance = {
			base = 1
			modifier = {
				trigger = {
					scope:warden_scope = {
						has_trait = ambitious
					}
				}
				add = 3
			}
		}
	}
	option = {
		name = imperia_heir_education.7.honorable
		trigger = {
			scope:heir_scope = {
				has_variable = education_is_offered_honorable_trait
			}
		}
		scope:heir_scope = {
			add_modifier = {
				name = modifier_kid_trait_honorable
			}
		}
		ai_chance = {
			base = 1
			modifier = {
				trigger = {
					scope:warden_scope = {
						has_trait = honorable
					}
				}
				add = 3
			}
		}
	}
	option = {
		name = imperia_heir_education.7.reckless
		trigger = {
			scope:heir_scope = {
				has_variable = education_is_offered_reckless_trait
			}
		}
		scope:heir_scope = {
			add_modifier = {
				name = modifier_kid_trait_reckless
			}
		}
		ai_chance = {
			base = 1
			modifier = {
				trigger = {
					scope:warden_scope = {
						has_trait = reckless
					}
				}
				add = 3
			}
		}
	}
	after = {
		scope:heir_scope = {
			imperia_remove_personality_trait_variables = yes
		}
	}
}

# Hidden event for negative personality trait
imperia_heir_education.8 = {
	type = country_event
	hidden = yes
	trigger = {
		any_scope_character = {
			is_heir = yes
			# Only pop if you're the actual "parent" of the child; no PUs should get this
			owner = prev
			# Needs to be age 10, and only age 10. Only pops once
			age = 10
			# ... And needs to be a character thats been followed since birth.
			OR = {
				has_variable = raised_by_clergy
				has_variable = raised_by_nobles
				has_variable = raised_by_burghers
				has_variable = raised_by_ruler
			}
		}
	}
	immediate = {
		# First we get a scope on the warden & heir
		random_scope_character = {
			limit = {
				is_heir = yes
			}
			save_scope_as = heir_scope
			if = {
				limit = {
					has_variable = raised_by_clergy
				}
				owner.ig:ig_devout.leader = {
					save_scope_as = warden_scope
				}
			}
			else_if = {
				limit = {
					has_variable = raised_by_nobles
				}
				owner.ig:ig_landowners.leader = {
					save_scope_as = warden_scope
				}
			}
			else_if = {
				limit = {
					has_variable = raised_by_burghers
				}
				owner.ig:ig_petty_bourgeoisie.leader = {
					save_scope_as = warden_scope
				}
			}
			else_if = {
				limit = {
					has_variable = raised_by_ruler
				}
				owner.ruler = {
					save_scope_as = warden_scope
				}
			}
			# get 3 random negative personality traits (meaning they REDUCE popularity)
			# .. But only if raised by the ruler.
			if = {
				limit = {
					has_variable = raised_by_ruler
				}
				imperia_load_heir_negative_personality_trait = yes
				imperia_load_heir_negative_personality_trait = yes
				imperia_load_heir_negative_personality_trait = yes
				# Pop a choice event for the player
				owner = {
					trigger_event = {
						id = imperia_heir_education.9
					}
				}
			}
			# The AI will choose randomly
			else = {
				random_list = {
					1 = {
						modifier = {
							if = {
								limit = {
									OR = {
										has_modifier = modifier_kid_trait_arrogant
										has_variable = education_is_offered_arrogant_trait
									}
								}
								add = -4
							}
							if = {
								limit = {
									scope:warden_scope = {
										has_trait = arrogant
									}
								}
								add = 3
							}
						}
						add_modifier = {
							name = modifier_kid_trait_arrogant
						}
					}
					1 = {
						modifier = {
							if = {
								limit = {
									OR = {
										has_modifier = modifier_kid_trait_bigoted
										has_variable = education_is_offered_bigoted_trait
									}
								}
								add = -4
							}
							if = {
								limit = {
									scope:warden_scope = {
										has_trait = bigoted
									}
								}
								add = 3
							}
						}
						add_modifier = {
							name = modifier_kid_trait_bigoted
						}
					}
					1 = {
						modifier = {
							if = {
								limit = {
									OR = {
										has_modifier = modifier_kid_trait_imperious
										has_variable = education_is_offered_imperious_trait
									}
								}
								add = -4
							}
							if = {
								limit = {
									scope:warden_scope = {
										has_trait = imperious
									}
								}
								add = 3
							}
						}
						add_modifier = {
							name = modifier_kid_trait_imperious
						}
					}
					1 = {
						modifier = {
							if = {
								limit = {
									OR = {
										has_modifier = modifier_kid_trait_reserved
										has_variable = education_is_offered_reserved_trait
									}
								}
								add = -4
							}
							if = {
								limit = {
									scope:warden_scope = {
										has_trait = reserved
									}
								}
								add = 3
							}
						}
						add_modifier = {
							name = modifier_kid_trait_reserved
						}
					}
					1 = {
						modifier = {
							if = {
								limit = {
									OR = {
										has_modifier = modifier_kid_trait_cruel
										has_variable = education_is_offered_cruel_trait
									}
								}
								add = -4
							}
							if = {
								limit = {
									scope:warden_scope = {
										has_trait = cruel
									}
								}
								add = 3
							}
						}
						add_modifier = {
							name = modifier_kid_trait_cruel
						}
					}
				}
			}
		}
		post_notification = imperia_heir_acquired_trait_from_warden_upbringing_notification
	}
}

# Actual Event for negative personality trait
imperia_heir_education.9 = {
	type = country_event
	title = imperia_heir_education.9.title
	desc = imperia_heir_education.9.desc
	flavor = imperia_heir_education.9.flavor
	duration = 3
	gui_window = event_window_2char
	right_icon = scope:warden_scope
	left_icon = scope:heir_scope
	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	on_opened_soundeffect = "event:/SFX/Events/misc/1Character_Banner"
	icon = "gfx/interface/icons/event_icons/event_newspaper.dds"
	immediate = {
		# First we get a scope on the warden & heir
		random_scope_character = {
			limit = {
				is_heir = yes
			}
			save_scope_as = heir_scope
		}
		# This only pops when the ruler is the warden
		ruler = {
			save_scope_as = warden_scope
		}
	}
	option = {
		name = imperia_heir_education.9.arrogant
		trigger = {
			scope:heir_scope = {
				has_variable = education_is_offered_arrogant_trait
			}
		}
		scope:heir_scope = {
			add_modifier = {
				name = modifier_kid_trait_arrogant
			}
		}
		ai_chance = {
			base = 1
			modifier = {
				trigger = {
					scope:warden_scope = {
						has_trait = arrogant
					}
				}
				add = 3
			}
		}
	}
	option = {
		name = imperia_heir_education.9.bigoted
		trigger = {
			scope:heir_scope = {
				has_variable = education_is_offered_bigoted_trait
			}
		}
		scope:heir_scope = {
			add_modifier = {
				name = modifier_kid_trait_bigoted
			}
		}
		ai_chance = {
			base = 1
			modifier = {
				trigger = {
					scope:warden_scope = {
						has_trait = bigoted
					}
				}
				add = 3
			}
		}
	}
	option = {
		name = imperia_heir_education.9.imperious
		trigger = {
			scope:heir_scope = {
				has_variable = education_is_offered_imperious_trait
			}
		}
		scope:heir_scope = {
			add_modifier = {
				name = modifier_kid_trait_imperious
			}
		}
		ai_chance = {
			base = 1
			modifier = {
				trigger = {
					scope:warden_scope = {
						has_trait = imperious
					}
				}
				add = 3
			}
		}
	}
	option = {
		name = imperia_heir_education.9.reserved
		trigger = {
			scope:heir_scope = {
				has_variable = education_is_offered_reserved_trait
			}
		}
		scope:heir_scope = {
			add_modifier = {
				name = modifier_kid_trait_reserved
			}
		}
		ai_chance = {
			base = 1
			modifier = {
				trigger = {
					scope:warden_scope = {
						has_trait = reserved
					}
				}
				add = 3
			}
		}
	}
	option = {
		name = imperia_heir_education.9.cruel
		trigger = {
			scope:heir_scope = {
				has_variable = education_is_offered_cruel_trait
			}
		}
		scope:heir_scope = {
			add_modifier = {
				name = modifier_kid_trait_cruel
			}
		}
		ai_chance = {
			base = 1
			modifier = {
				trigger = {
					scope:warden_scope = {
						has_trait = cruel
					}
				}
				add = 3
			}
		}
	}
	after = {
		scope:heir_scope = {
			imperia_remove_personality_trait_variables = yes
		}
	}
}

# Hidden event for multiclass skill trait
imperia_heir_education.10 = {
	type = country_event
	hidden = yes
	trigger = {
		any_scope_character = {
			is_heir = yes
			# Only pop if you're the actual "parent" of the child; no PUs should get this
			owner = prev
			# Needs to be age 13, and only age 13. Only pops once
			age = 13
			# ... And needs to be a character thats been followed since birth.
			OR = {
				has_variable = raised_by_clergy
				has_variable = raised_by_nobles
				has_variable = raised_by_burghers
				has_variable = raised_by_ruler
			}
		}
	}
	immediate = {
		# First we get a scope on the warden & heir
		random_scope_character = {
			limit = {
				is_heir = yes
			}
			save_scope_as = heir_scope
			if = {
				limit = {
					has_variable = raised_by_clergy
				}
				owner.ig:ig_devout.leader = {
					save_scope_as = warden_scope
				}
			}
			else_if = {
				limit = {
					has_variable = raised_by_nobles
				}
				owner.ig:ig_landowners.leader = {
					save_scope_as = warden_scope
				}
			}
			else_if = {
				limit = {
					has_variable = raised_by_burghers
				}
				owner.ig:ig_petty_bourgeoisie.leader = {
					save_scope_as = warden_scope
				}
			}
			else_if = {
				limit = {
					has_variable = raised_by_ruler
				}
				owner.ruler = {
					save_scope_as = warden_scope
				}
			}
			# get 3 random multiclass skill traits
			# .. But only if raised by the ruler.
			if = {
				limit = {
					has_variable = raised_by_ruler
				}
				imperia_load_heir_multiclass_skill_trait = yes
				imperia_load_heir_multiclass_skill_trait = yes
				imperia_load_heir_multiclass_skill_trait = yes
				# Pop a choice event for the player
				owner = {
					trigger_event = {
						id = imperia_heir_education.11
					}
				}
			}
			# The AI will choose randomly
			else = {
				random_list = {
					1 = {
						modifier = {
							if = {
								limit = {
									OR = {
										has_modifier = modifier_kid_trait_explorer
										has_variable = education_is_offered_explorer_trait
									}
								}
								add = -4
							}
							if = {
								limit = {
									scope:warden_scope = {
										has_trait = explorer
									}
								}
								add = 3
							}
						}
						add_modifier = {
							name = modifier_kid_trait_explorer
						}
					}
					1 = {
						modifier = {
							if = {
								limit = {
									OR = {
										has_modifier = modifier_kid_trait_bandit
										has_variable = education_is_offered_bandit_trait
									}
								}
								add = -4
							}
							if = {
								limit = {
									scope:warden_scope = {
										has_trait = bandit
									}
								}
								add = 3
							}
						}
						add_modifier = {
							name = modifier_kid_trait_bandit
						}
					}
					1 = {
						modifier = {
							if = {
								limit = {
									OR = {
										has_modifier = modifier_kid_trait_erudite
										has_variable = education_is_offered_erudite_trait
									}
								}
								add = -4
							}
							if = {
								limit = {
									scope:warden_scope = {
										has_trait = erudite
									}
								}
								add = 3
							}
						}
						add_modifier = {
							name = modifier_kid_trait_erudite
						}
					}
					1 = {
						modifier = {
							if = {
								limit = {
									OR = {
										has_modifier = modifier_kid_trait_engineer
										has_variable = education_is_offered_engineer_trait
									}
								}
								add = -4
							}
							if = {
								limit = {
									scope:warden_scope = {
										has_trait = engineer
									}
								}
								add = 3
							}
						}
						add_modifier = {
							name = modifier_kid_trait_engineer
						}
					}
					1 = {
						modifier = {
							if = {
								limit = {
									OR = {
										has_modifier = modifier_kid_trait_master_bureaucrat
										has_variable = education_is_offered_master_bureaucrat_trait
									}
								}
								add = -4
							}
							if = {
								limit = {
									scope:warden_scope = {
										has_trait = master_bureaucrat
									}
								}
								add = 3
							}
						}
						add_modifier = {
							name = modifier_kid_trait_master_bureaucrat
						}
					}
				}
			}
		}
		post_notification = imperia_heir_acquired_trait_from_warden_upbringing_notification
	}
}

# Actual Event for multiclass skill trait
imperia_heir_education.11 = {
	type = country_event
	title = imperia_heir_education.11.title
	desc = imperia_heir_education.11.desc
	flavor = imperia_heir_education.11.flavor
	duration = 3
	gui_window = event_window_2char
	right_icon = scope:warden_scope
	left_icon = scope:heir_scope
	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	on_opened_soundeffect = "event:/SFX/Events/misc/1Character_Banner"
	icon = "gfx/interface/icons/event_icons/event_newspaper.dds"
	immediate = {
		# First we get a scope on the warden & heir
		random_scope_character = {
			limit = {
				is_heir = yes
			}
			save_scope_as = heir_scope
		}
		# This only pops when the ruler is the warden
		ruler = {
			save_scope_as = warden_scope
		}
	}
	option = {
		name = imperia_heir_education.11.explorer
		trigger = {
			scope:heir_scope = {
				has_variable = education_is_offered_explorer_trait
			}
		}
		scope:heir_scope = {
			add_modifier = {
				name = modifier_kid_trait_explorer
			}
		}
		ai_chance = {
			base = 1
			modifier = {
				trigger = {
					scope:warden_scope = {
						has_trait = explorer
					}
				}
				add = 3
			}
		}
	}
	option = {
		name = imperia_heir_education.11.bandit
		trigger = {
			scope:heir_scope = {
				has_variable = education_is_offered_bandit_trait
			}
		}
		scope:heir_scope = {
			add_modifier = {
				name = modifier_kid_trait_bandit
			}
		}
		ai_chance = {
			base = 1
			modifier = {
				trigger = {
					scope:warden_scope = {
						has_trait = bandit
					}
				}
				add = 3
			}
		}
	}
	option = {
		name = imperia_heir_education.11.erudite
		trigger = {
			scope:heir_scope = {
				has_variable = education_is_offered_erudite_trait
			}
		}
		scope:heir_scope = {
			add_modifier = {
				name = modifier_kid_trait_erudite
			}
		}
		ai_chance = {
			base = 1
			modifier = {
				trigger = {
					scope:warden_scope = {
						has_trait = erudite
					}
				}
				add = 3
			}
		}
	}
	option = {
		name = imperia_heir_education.11.engineer
		trigger = {
			scope:heir_scope = {
				has_variable = education_is_offered_engineer_trait
			}
		}
		scope:heir_scope = {
			add_modifier = {
				name = modifier_kid_trait_engineer
			}
		}
		ai_chance = {
			base = 1
			modifier = {
				trigger = {
					scope:warden_scope = {
						has_trait = engineer
					}
				}
				add = 3
			}
		}
	}
	option = {
		name = imperia_heir_education.11.master_bureaucrat
		trigger = {
			scope:heir_scope = {
				has_variable = education_is_offered_master_bureaucrat_trait
			}
		}
		scope:heir_scope = {
			add_modifier = {
				name = modifier_kid_trait_master_bureaucrat
			}
		}
		ai_chance = {
			base = 1
			modifier = {
				trigger = {
					scope:warden_scope = {
						has_trait = master_bureaucrat
					}
				}
				add = 3
			}
		}
	}
	after = {
		scope:heir_scope = {
			imperia_remove_personality_trait_variables = yes
		}
	}
}

# Heir advances education; 14% chance per year, roughly
imperia_heir_education.12 = {
	type = country_event
	title = imperia_heir_education.12.title
	desc = imperia_heir_education.12.desc
	flavor = imperia_heir_education.12.flavor
	duration = 3
	gui_window = event_window_2char
	right_icon = scope:warden_scope
	left_icon = scope:heir_scope
	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	on_opened_soundeffect = "event:/SFX/Events/misc/1Character_Banner"
	icon = "gfx/interface/icons/event_icons/event_newspaper.dds"
	trigger = {
		any_scope_character = {
			is_heir = yes
			# Only pop if you're the actual "parent" of the child; no PUs should get this
			owner = prev
			# Needs to be age 10 or above
			age >= 10
			# And a child, of course
			has_trait = trait_child
			# ... And needs to be a character thats been followed since birth.
			OR = {
				has_variable = raised_by_clergy
				has_variable = raised_by_nobles
				has_variable = raised_by_burghers
				has_variable = raised_by_ruler
			}
			trigger_if = {
				limit = {
					has_variable = raised_by_clergy
				}
				WARDEN_can_teach_WARD_a_skill = {
					WARDEN = owner.ig:ig_devout.leader
					WARD = this
				}
			}
			trigger_else_if = {
				limit = {
					has_variable = raised_by_nobles
				}
				WARDEN_can_teach_WARD_a_skill = {
					WARDEN = owner.ig:ig_landowners.leader
					WARD = this
				}
			}
			trigger_else_if = {
				limit = {
					has_variable = raised_by_burghers
				}
				WARDEN_can_teach_WARD_a_skill = {
					WARDEN = owner.ig:ig_petty_bourgeoisie.leader
					WARD = this
				}
			}
			trigger_else_if = {
				limit = {
					has_variable = raised_by_ruler
				}
				WARDEN_can_teach_WARD_a_skill = {
					WARDEN = owner.ruler
					WARD = this
				}
			}
		}
	}
	immediate = {
		random_scope_character = {
			limit = {
				is_heir = yes
			}
			save_scope_as = heir_scope
			if = {
				limit = {
					has_variable = raised_by_clergy
				}
				owner.ig:ig_devout.leader = {
					save_scope_as = warden_scope
				}
			}
			else_if = {
				limit = {
					has_variable = raised_by_nobles
				}
				owner.ig:ig_landowners.leader = {
					save_scope_as = warden_scope
				}
			}
			else_if = {
				limit = {
					has_variable = raised_by_burghers
				}
				owner.ig:ig_petty_bourgeoisie.leader = {
					save_scope_as = warden_scope
				}
			}
			else_if = {
				limit = {
					has_variable = raised_by_ruler
				}
				owner.ruler = {
					save_scope_as = warden_scope
				}
			}
		}
	}
	option = {
		name = imperia_heir_education.12.artillery
		trigger = {
			WARDEN_can_teach_WARD_artillery = {
				WARDEN = scope:warden_scope
				WARD = scope:heir_scope
			}
		}
		imperia_give_or_upgrade_artillery_education_to_CHARACTER = {
			CHARACTER = scope:heir_scope
		}
		ai_chance = {
			base = 10
		}
	}
	option = {
		name = imperia_heir_education.12.trench
		trigger = {
			WARDEN_can_teach_WARD_trench = {
				WARDEN = scope:warden_scope
				WARD = scope:heir_scope
			}
		}
		imperia_give_or_upgrade_trench_education_to_CHARACTER = {
			CHARACTER = scope:heir_scope
		}
		ai_chance = {
			base = 10
		}
	}
	option = {
		name = imperia_heir_education.12.offensive
		trigger = {
			WARDEN_can_teach_WARD_offensive = {
				WARDEN = scope:warden_scope
				WARD = scope:heir_scope
			}
		}
		imperia_give_or_upgrade_offensive_education_to_CHARACTER = {
			CHARACTER = scope:heir_scope
		}
		ai_chance = {
			base = 10
		}
	}
	option = {
		name = imperia_heir_education.12.defensive
		trigger = {
			WARDEN_can_teach_WARD_defensive = {
				WARDEN = scope:warden_scope
				WARD = scope:heir_scope
			}
		}
		imperia_give_or_upgrade_defensive_education_to_CHARACTER = {
			CHARACTER = scope:heir_scope
		}
		ai_chance = {
			base = 10
		}
	}
	option = {
		name = imperia_heir_education.12.naval_commander
		trigger = {
			WARDEN_can_teach_WARD_naval_commander = {
				WARDEN = scope:warden_scope
				WARD = scope:heir_scope
			}
		}
		imperia_give_or_upgrade_naval_commander_education_to_CHARACTER = {
			CHARACTER = scope:heir_scope
		}
		ai_chance = {
			base = 10
		}
	}
	option = {
		name = imperia_heir_education.12.convoy_raider
		trigger = {
			WARDEN_can_teach_WARD_convoy_raider = {
				WARDEN = scope:warden_scope
				WARD = scope:heir_scope
			}
		}
		imperia_give_or_upgrade_convoy_raider_education_to_CHARACTER = {
			CHARACTER = scope:heir_scope
		}
		ai_chance = {
			base = 10
		}
	}
	option = {
		name = imperia_heir_education.12.popular_commander
		trigger = {
			WARDEN_can_teach_WARD_popular_commander = {
				WARDEN = scope:warden_scope
				WARD = scope:heir_scope
			}
		}
		imperia_give_or_upgrade_popular_commander_education_to_CHARACTER = {
			CHARACTER = scope:heir_scope
		}
		ai_chance = {
			base = 10
		}
	}
	option = {
		name = imperia_heir_education.12.diplomat
		trigger = {
			WARDEN_can_teach_WARD_diplomat = {
				WARDEN = scope:warden_scope
				WARD = scope:heir_scope
			}
		}
		imperia_give_or_upgrade_diplomat_education_to_CHARACTER = {
			CHARACTER = scope:heir_scope
		}
		ai_chance = {
			base = 10
		}
	}
	option = {
		name = imperia_heir_education.12.colonial_admin
		trigger = {
			WARDEN_can_teach_WARD_colonial_admin = {
				WARDEN = scope:warden_scope
				WARD = scope:heir_scope
			}
		}
		imperia_give_or_upgrade_colonial_admin_education_to_CHARACTER = {
			CHARACTER = scope:heir_scope
		}
		ai_chance = {
			base = 10
		}
	}
	option = {
		name = imperia_heir_education.12.political_operator
		trigger = {
			WARDEN_can_teach_WARD_political_operator = {
				WARDEN = scope:warden_scope
				WARD = scope:heir_scope
			}
		}
		imperia_give_or_upgrade_political_operator_education_to_CHARACTER = {
			CHARACTER = scope:heir_scope
		}
		ai_chance = {
			base = 10
		}
	}
	option = {
		name = imperia_heir_education.12.orator
		trigger = {
			WARDEN_can_teach_WARD_orator = {
				WARDEN = scope:warden_scope
				WARD = scope:heir_scope
			}
		}
		imperia_give_or_upgrade_orator_education_to_CHARACTER = {
			CHARACTER = scope:heir_scope
		}
		ai_chance = {
			base = 10
		}
	}
}

# Heir finishes his/her education
imperia_heir_education.13 = {
	type = country_event
	title = imperia_heir_education.13.title
	desc = imperia_heir_education.13.desc
	flavor = imperia_heir_education.13.flavor
	duration = 3
	gui_window = event_window_2char
	right_icon = scope:warden_scope
	left_icon = scope:heir_scope
	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	on_opened_soundeffect = "event:/SFX/Events/misc/1Character_Banner"
	icon = "gfx/interface/icons/event_icons/event_newspaper.dds"
	trigger = {
		# Triggered from the hidden event, .3, which pop 16 years after the day of birth
		# Done this roundabout way since event triggers are measured when the event is triggered, not when its scheduled to happen
		any_scope_character = {
			is_heir = yes
			# Between 15 (including) and 17, in case leap year shenanigans make this pop when the heir is 16 years minus 1 day
			age >= 15
			age < 17
			# Needs to have been followed since birth
			OR = {
				has_variable = raised_by_clergy
				has_variable = raised_by_nobles
				has_variable = raised_by_burghers
				has_variable = raised_by_ruler
			}
		}
	}
	immediate = {
		random_scope_character = {
			limit = {
				is_heir = yes
			}
			save_scope_as = heir_scope
			if = {
				limit = {
					has_variable = raised_by_clergy
				}
				owner.ig:ig_devout.leader = {
					save_scope_as = warden_scope
				}
			}
			else_if = {
				limit = {
					has_variable = raised_by_nobles
				}
				owner.ig:ig_landowners.leader = {
					save_scope_as = warden_scope
				}
			}
			else_if = {
				limit = {
					has_variable = raised_by_burghers
				}
				owner.ig:ig_petty_bourgeoisie.leader = {
					save_scope_as = warden_scope
				}
			}
			else_if = {
				limit = {
					has_variable = raised_by_ruler
				}
				owner.ruler = {
					save_scope_as = warden_scope
				}
			}
			### THE GREAT TRAIT REPLACEMENT
			remove_trait = trait_child
			if = {
				limit = {
					WARDEN_can_teach_WARD_a_skill = {
						WARDEN = scope:warden_scope
						WARD = scope:heir_scope
					}
				}
				set_variable = final_lesson_from_warden
				# If the warden can still teach something, do that now
				random_list = {
					# Artillery
					1 = {
						trigger = {
							WARDEN_can_teach_WARD_artillery = {
								WARDEN = scope:warden_scope
								WARD = scope:heir_scope
							}
						}
						imperia_give_or_upgrade_artillery_education_to_CHARACTER = {
							CHARACTER = scope:heir_scope
						}
					}
					# Trench
					1 = {
						trigger = {
							WARDEN_can_teach_WARD_trench = {
								WARDEN = scope:warden_scope
								WARD = scope:heir_scope
							}
						}
						imperia_give_or_upgrade_trench_education_to_CHARACTER = {
							CHARACTER = scope:heir_scope
						}
					}
					# Offensive
					1 = {
						trigger = {
							WARDEN_can_teach_WARD_offensive = {
								WARDEN = scope:warden_scope
								WARD = scope:heir_scope
							}
						}
						imperia_give_or_upgrade_offensive_education_to_CHARACTER = {
							CHARACTER = scope:heir_scope
						}
					}
					# Offensive
					1 = {
						trigger = {
							WARDEN_can_teach_WARD_defensive = {
								WARDEN = scope:warden_scope
								WARD = scope:heir_scope
							}
						}
						imperia_give_or_upgrade_defensive_education_to_CHARACTER = {
							CHARACTER = scope:heir_scope
						}
					}
					# Naval commander
					1 = {
						trigger = {
							WARDEN_can_teach_WARD_naval_commander = {
								WARDEN = scope:warden_scope
								WARD = scope:heir_scope
							}
						}
						imperia_give_or_upgrade_naval_commander_education_to_CHARACTER = {
							CHARACTER = scope:heir_scope
						}
					}
					# Convoy raider
					1 = {
						trigger = {
							WARDEN_can_teach_WARD_convoy_raider = {
								WARDEN = scope:warden_scope
								WARD = scope:heir_scope
							}
						}
						imperia_give_or_upgrade_convoy_raider_education_to_CHARACTER = {
							CHARACTER = scope:heir_scope
						}
					}
					# popular commander
					1 = {
						trigger = {
							WARDEN_can_teach_WARD_popular_commander = {
								WARDEN = scope:warden_scope
								WARD = scope:heir_scope
							}
						}
						imperia_give_or_upgrade_popular_commander_education_to_CHARACTER = {
							CHARACTER = scope:heir_scope
						}
					}
					# diplomat
					1 = {
						trigger = {
							WARDEN_can_teach_WARD_diplomat = {
								WARDEN = scope:warden_scope
								WARD = scope:heir_scope
							}
						}
						imperia_give_or_upgrade_diplomat_education_to_CHARACTER = {
							CHARACTER = scope:heir_scope
						}
					}
					# colonial admin
					1 = {
						trigger = {
							WARDEN_can_teach_WARD_colonial_admin = {
								WARDEN = scope:warden_scope
								WARD = scope:heir_scope
							}
						}
						imperia_give_or_upgrade_colonial_admin_education_to_CHARACTER = {
							CHARACTER = scope:heir_scope
						}
					}
					# Political operator
					1 = {
						trigger = {
							WARDEN_can_teach_WARD_political_operator = {
								WARDEN = scope:warden_scope
								WARD = scope:heir_scope
							}
						}
						imperia_give_or_upgrade_political_operator_education_to_CHARACTER = {
							CHARACTER = scope:heir_scope
						}
					}
					# orator
					1 = {
						trigger = {
							WARDEN_can_teach_WARD_orator = {
								WARDEN = scope:warden_scope
								WARD = scope:heir_scope
							}
						}
						imperia_give_or_upgrade_orator_education_to_CHARACTER = {
							CHARACTER = scope:heir_scope
						}
					}
				}
			}
			# Else if they at least learned a skill, up it (if possible)
			else_if = {
				limit = {
					OR = {
						### Levelable Skills
						## Commander
						# Artillery
						has_modifier = basic_artillery_commander_education
						has_modifier = experienced_artillery_commander_education
						# Trench
						has_modifier = stalwart_defender_education
						has_modifier = trench_rat_education
						# Offensive
						has_modifier = basic_offensive_planner_education
						has_modifier = experienced_offensive_planner_education
						# Defensive
						has_modifier = basic_defensive_strategist_education
						has_modifier = experienced_defensive_strategist_education
						## Admiral
						# Naval Commander
						has_modifier = basic_naval_commander_education
						has_modifier = experienced_naval_commander_education
						# Convoy Raider
						has_modifier = convoy_raider_commander_education
						has_modifier = experienced_convoy_raider_education
						# Popular Commander
						has_modifier = traditionalist_commander_education
						has_modifier = popular_commander_education
						## Politician
						# Diplomat
						has_modifier = basic_diplomat_education
						has_modifier = experienced_diplomat_education
						# Colonial admin
						has_modifier = basic_colonial_administrator_education
						has_modifier = experienced_colonial_administrator_education
						# Political operator
						has_modifier = basic_political_operator_education
						has_modifier = experienced_political_operator_education
						# Orator
						has_modifier = inspirational_orator_education
						has_modifier = demagogue_education
					}
				}
				set_variable = random_skillup
				random_list = {
					# Commander skills
					1 = {
						trigger = {
							OR = {
								has_modifier = basic_artillery_commander_education
								has_modifier = experienced_artillery_commander_education
							}
						}
						imperia_give_or_upgrade_artillery_education_to_CHARACTER = {
							CHARACTER = scope:heir_scope
						}
					}
					1 = {
						trigger = {
							OR = {
								has_modifier = stalwart_defender_education
								has_modifier = trench_rat_education
							}
						}
						imperia_give_or_upgrade_trench_education_to_CHARACTER = {
							CHARACTER = scope:heir_scope
						}
					}
					1 = {
						trigger = {
							OR = {
								has_modifier = basic_offensive_planner_education
								has_modifier = experienced_offensive_planner_education
							}
						}
						imperia_give_or_upgrade_offensive_education_to_CHARACTER = {
							CHARACTER = scope:heir_scope
						}
					}
					1 = {
						trigger = {
							OR = {
								has_modifier = basic_defensive_strategist_education
								has_modifier = experienced_defensive_strategist_education
							}
						}
						imperia_give_or_upgrade_defensive_education_to_CHARACTER = {
							CHARACTER = scope:heir_scope
						}
					}
					# Admiral skills
					1 = {
						trigger = {
							OR = {
								has_modifier = basic_naval_commander_education
								has_modifier = experienced_naval_commander_education
							}
						}
						imperia_give_or_upgrade_naval_commander_education_to_CHARACTER = {
							CHARACTER = scope:heir_scope
						}
					}
					1 = {
						trigger = {
							OR = {
								has_modifier = convoy_raider_commander_education
								has_modifier = experienced_convoy_raider_education
							}
						}
						imperia_give_or_upgrade_convoy_raider_education_to_CHARACTER = {
							CHARACTER = scope:heir_scope
						}
					}
					1 = {
						trigger = {
							OR = {
								has_modifier = traditionalist_commander_education
								has_modifier = popular_commander_education
							}
						}
						imperia_give_or_upgrade_popular_commander_education_to_CHARACTER = {
							CHARACTER = scope:heir_scope
						}
					}
					# Politician skills
					1 = {
						trigger = {
							OR = {
								has_modifier = basic_diplomat_education
								has_modifier = experienced_diplomat_education
							}
						}
						imperia_give_or_upgrade_diplomat_education_to_CHARACTER = {
							CHARACTER = scope:heir_scope
						}
					}
					1 = {
						trigger = {
							OR = {
								has_modifier = basic_colonial_administrator_education
								has_modifier = experienced_colonial_administrator_education
							}
						}
						imperia_give_or_upgrade_colonial_admin_education_to_CHARACTER = {
							CHARACTER = scope:heir_scope
						}
					}
					1 = {
						trigger = {
							OR = {
								has_modifier = basic_political_operator_education
								has_modifier = experienced_political_operator_education
							}
						}
						imperia_give_or_upgrade_political_operator_education_to_CHARACTER = {
							CHARACTER = scope:heir_scope
						}
					}
					1 = {
						trigger = {
							OR = {
								has_modifier = inspirational_orator_education
								has_modifier = demagogue_education
							}
						}
						imperia_give_or_upgrade_orator_education_to_CHARACTER = {
							CHARACTER = scope:heir_scope
						}
					}
				}
			}
			# Else just give a random skill
			else = {
				add_random_trait = skill
			}
			imperia_convert_education_modifiers_to_traits_and_skills = yes
		}
	}
	option = {
		default_option = yes
		name = imperia_heir_education.13.a
		scope:heir_scope = {
			custom_tooltip = education_modifiers_have_been_replaced_tt
			if = {
				limit = {
					has_variable = final_lesson_from_warden
				}
				custom_tooltip = final_lesson_from_warden_tt
			}
			else_if = {
				limit = {
					has_variable = random_skillup
				}
				custom_tooltip = random_skillup_tt
			}
			else = {
				custom_tooltip = random_skill_gained_tt
			}
		}
	}
}
