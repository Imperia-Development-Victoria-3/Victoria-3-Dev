
# Dead Man of Europe - Inspired by Divided Monarchists
# Made by Fallonar
# Refer to comments here and in 02_french_monarchism to get an idea as to how this works.
tur_set_dead_man_variables = {
	#Republican Variables
	set_variable = { name = republican_progress value = 10 } #Master progress variable. This is incremented by the other variables, and corresponds to the progress bar if the republicans are in the lead.
	set_variable = { name = republican_progress_from_characters value = 0 } #Progress-from-character component. This updates with the combined popularities of every republican character later on, and is used to calculate republican_progress_next.
	set_variable = { name = republican_progress_from_igs value = 0 } #Progress-from-IG component. This updates with the combined clout of every republican IG later on, and is used to calculate republican_progress_next.
	set_variable = { name = republican_progress_from_legitimacy value = 0 } #Progress-from-legitimacy component. This updates with the current government legitimacy, and is also used to calculate republican_progress_next.
	set_variable = { name = republican_progress_from_effects value = 0 } #Final element in republican_progress_next. This is defined by various effects, and is based solely on scripted effects. This is how designers can manually grant ticking bonuses or maluses to this mechanic.
	set_variable = { name = republican_progress_next value = 0 } #This variable is an incrementor - it is calculated by the previous five variables on a weekly basis, and is added to republican_progress on the monthly. This is used in localisation to tell the player what the current rate of change for republican_progress is.
	
	#Theocracy Variables
	if = {
		limit = {
			game_date < 1836.2.1 #Why? Because ruler scope doesn't exist the first time this script is executed.
		}
		set_variable = { name = theocracy_progress value = 25 } #This is done because the theocracy has an advantage the first time the script is executed, but do not necessarily have that advantage if the JE is activated elsewhere.
	}
	else = {
		set_variable = { name = theocracy_progress value = 10 }
	}
	set_variable = { name = theocracy_progress_from_characters value = 0 } 
	set_variable = { name = theocracy_progress_from_igs value = 0 }
	set_variable = { name = theocracy_progress_from_legitimacy value = 0 }
	set_variable = { name = theocracy_progress_from_effects value = 0 }
	set_variable = { name = theocracy_progress_next value = 0 }

	#Communist Variables
	set_variable = { name = communist_progress value = 10 }
	set_variable = { name = communist_progress_from_characters value = 0 }
	set_variable = { name = communist_progress_from_igs value = 0 }
	set_variable = { name = communist_progress_from_legitimacy value = 0 }
	set_variable = { name = communist_progress_from_effects value = 0 }
	set_variable = { name = communist_progress_next value = 0 }

	set_variable = { name = ig_weight value = 0 } #This variable is used solely for mathematical purposes, and is set as equivalent to the clout of a given interest group. It exists so that IGs can be weighted higher or lower depending on whether they're in-government or not.
}

fra_weekly_pulse_republican_progress = { #Effects like these are run three times, one for each house. All of them function essentially the same way.
	set_variable = { name = republican_progress_from_characters value = 0 } #All of these variables are ephemeral and should never be manually set to anything.
	set_variable = { name = republican_progress_from_igs value = 0 }
	set_variable = { name = republican_progress_from_legitimacy value = root.government_legitimacy } #Government legitimacy is a single constant, and so this variable is set immediately rather than needing a calculation.
	set_variable = { name = republican_progress_next value = 0 }
	#From Characters
	every_scope_character = {
		limit = {
			OR = {
				has_ideology = ideology:ideology_republican
				has_ideology = ideology:ideology_radical
				has_ideology = ideology:ideology_nihilist
				has_ideology = ideology:ideology_liberal_leader
				has_ideology = ideology:ideology_positivist
				has_ideology = ideology:ideology_market_liberal
			}
		}
		ROOT = {
			change_variable = { name = republican_progress_from_characters add = prev.popularity } #for_each loop. For each character of ideology_republican, add that character's popularity to republican_progress_from_characters.
		}
	}
	change_variable = { name = republican_progress_from_characters divide = 100 } #Character popularities are -100/100, rather than our desired -1/1, so divide by 100.
	# From Interest Groups
	every_interest_group = {
		limit = {
			leader = {
				has_ideology = ideology:ideology_republican
			}
		}
		ROOT = {														#for_each loop. For each interest group of ideology_republican, perform the following steps in sequence.
			set_variable = { name = ig_weight value = prev.ig_clout } 	#1. Set ig_weight as equal to the interest group's clout.
		}
		if = {
			limit = {
				is_in_government = yes
			}
			ROOT = {
				change_variable = { name = ig_weight multiply = 3 }		#2. If that IG is in government, multiply ig_weight by a given value.
			}
		}
		ROOT = {
			change_variable = { name = republican_progress_from_igs add = var:ig_weight }	#3. Add ig_weight to the central republican_progress_from_igs variable. This will run until there are no more republican IGs.
		}
	}
	# From Legitimacy
	change_variable = { name = republican_progress_from_legitimacy divide = 100 } #Legitimacy divided by 100, to make it minimum 0 and maximum 1.
	change_variable = { name = republican_progress_from_legitimacy subtract = 0.5 } #Legitimacy subtracted by 0.5, to make it minimum -0.5 and maximum 0.5. Balanced scale of negative to absolute value.
	if = {
		limit = {
			NOT = {
				ruler_is_republican = yes #If the ruler is republican, then the republicans benefit from high legitimacy and suffer from low legitimacy.
			}
		}
		change_variable = { name = republican_progress_from_legitimacy multiply = -0.5 } #If the ruler is not republican, they benefit from low legitimacy and suffer from high legitimacy.
	}

	#Final Compilation
	change_variable = { name = republican_progress_next add = var:republican_progress_from_characters } #All sub-variables are added to republican_progress_next here. At this point, all of the component variables are calculated properly, and converted to a decimal scale.
	change_variable = { name = republican_progress_next add = var:republican_progress_from_igs }
	change_variable = { name = republican_progress_next add = var:republican_progress_from_legitimacy }
	change_variable = { name = republican_progress_next add = var:republican_progress_from_effects }
}

fra_weekly_pulse_theocracy_progress = { #See republican progress to see how this works.
	set_variable = { name = theocracy_progress_from_characters value = 0 }
	set_variable = { name = theocracy_progress_from_igs value = 0 }
	set_variable = { name = theocracy_progress_from_legitimacy value = root.government_legitimacy }
	set_variable = { name = theocracy_progress_next value = 0 }
	#From Characters
	every_scope_character = {
		limit = {
			OR = {
				has_ideology = ideology:ideology_theocrat
				has_ideology = ideology:ideology_traditionalist
				has_ideology = ideology:ideology_authoritarian
				has_ideology = ideology:ideology_slaver
				has_ideology = ideology:ideology_corporatist
			}
		}
		ROOT = {
			change_variable = { name = theocracy_progress_from_characters add = prev.popularity }
		}
	}
	change_variable = { name = theocracy_progress_from_characters divide = 100 }
	# From Interest Groups
	every_interest_group = {
		limit = {
			leader = {
				has_ideology = ideology:ideology_theocracy
			}
		}
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
		}
		if = {
			limit = {
				is_in_government = yes
			}
			ROOT = {
				change_variable = { name = ig_weight multiply = 3 }
			}
		}
		ROOT = {
			change_variable = { name = theocracy_progress_from_igs add = var:ig_weight }
		}
	}
	# From Legitimacy
	change_variable = { name = theocracy_progress_from_legitimacy divide = 100 }
	change_variable = { name = theocracy_progress_from_legitimacy subtract = 0.5 }
	if = {
		limit = {
			NOT = {
				ruler_is_theocracy = yes
			}
		}
		change_variable = { name = theocracy_progress_from_legitimacy multiply = -0.5 }
	}

	#Final Compilation
	change_variable = { name = theocracy_progress_next add = var:theocracy_progress_from_characters }
	change_variable = { name = theocracy_progress_next add = var:theocracy_progress_from_igs }
	change_variable = { name = theocracy_progress_next add = var:theocracy_progress_from_legitimacy }
	change_variable = { name = theocracy_progress_next add = var:theocracy_progress_from_effects }
}

fra_weekly_pulse_communist_progress = { #See communist progress to see how this works.
	set_variable = { name = communist_progress_from_characters value = 0 }
	set_variable = { name = communist_progress_from_igs value = 0 }
	set_variable = { name = communist_progress_from_legitimacy value = root.government_legitimacy }
	set_variable = { name = communist_progress_next value = 0 }
	#From Characters
	every_scope_character = {
		limit = {
			OR = {
				has_ideology = ideology:ideology_communist
				has_ideology = ideology:ideology_vanguardist
				has_ideology = ideology:ideology_anarchist
				has_ideology = ideology:ideology_social_democrat
				has_ideology = ideology:ideology_humanitarian
			}
		}
		ROOT = {
			change_variable = { name = communist_progress_from_characters add = prev.popularity }
		}
	}
	change_variable = { name = communist_progress_from_characters divide = 100 }
	# From Interest Groups
	every_interest_group = {
		limit = {
			leader = {
				has_ideology = ideology:ideology_communist
			}
		}
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
		}
		if = {
			limit = {
				is_in_government = yes
			}
			ROOT = {
				change_variable = { name = ig_weight multiply = 3 }
			}
		}
		ROOT = {
			change_variable = { name = communist_progress_from_igs add = var:ig_weight }
		}
	}
	# From Legitimacy
	change_variable = { name = communist_progress_from_legitimacy divide = 100 }
	change_variable = { name = communist_progress_from_legitimacy subtract = 0.5 }
	if = {
		limit = {
			NOT = {
				ruler_is_communist = yes
			}
		}
		change_variable = { name = communist_progress_from_legitimacy multiply = -0.5 }
	}

	#Final Compilation
	change_variable = { name = communist_progress_next add = var:communist_progress_from_characters }
	change_variable = { name = communist_progress_next add = var:communist_progress_from_igs }
	change_variable = { name = communist_progress_next add = var:communist_progress_from_legitimacy }
	change_variable = { name = communist_progress_next add = var:communist_progress_from_effects }
}

fra_clear_divided_monarchist_variables = { #Clears all variables, to save memory/performance. Should be executed by anything that makes Divided Monarchists irrelevant.
	remove_variable = republican_progress 
	remove_variable = republican_progress_from_characters 
	remove_variable = republican_progress_from_igs 
	remove_variable = republican_progress_from_legitimacy 
	remove_variable = republican_progress_from_effects 
	remove_variable = republican_progress_next 
	remove_variable = republican_progress 
	remove_variable = theocracy_progress_from_characters 
	remove_variable = theocracy_progress_from_igs 
	remove_variable = theocracy_progress_from_legitimacy 
	remove_variable = theocracy_progress_from_effects 
	remove_variable = theocracy_progress_next 
	remove_variable = communist_progress 
	remove_variable = communist_progress_from_characters 
	remove_variable = communist_progress_from_igs 
	remove_variable = communist_progress_from_legitimacy 
	remove_variable = communist_progress_from_effects 
	remove_variable = communist_progress_next 
	remove_variable = ig_weight 
}

fra_define_leading_dynasty = { #This scripted effect determines which dynasty is the most powerful one, and sets fra_leading_dynasty_progress to be equal to that dynasty's progress variable. This allows the bar to work, and much easier calculation to take place.
	if = {
		limit = {
			var:republican_progress > var:communist_progress
			var:republican_progress > var:theocracy_progress
		}
		set_variable = { name = fra_leading_dynasty_progress value = var:republican_progress }
	}
	else_if = {
		limit = {
			var:theocracy_progress > var:communist_progress
			var:theocracy_progress > var:republican_progress
		}
		set_variable = { name = fra_leading_dynasty_progress value = var:theocracy_progress }
	}
	else_if = {
		limit = {
			var:communist_progress > var:theocracy_progress
			var:communist_progress > var:republican_progress
		}
		set_variable = { name = fra_leading_dynasty_progress value = var:communist_progress }
	}
	clamp_variable = { name = fra_leading_dynasty_progress max = 360 min = 0 }  #These variables cannot exceed 360 or 0, to prevent bad and ugly displays.
}