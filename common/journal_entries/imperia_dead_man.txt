je_dead_man_main = {
	icon = "gfx/interface/icons/event_icons/event_skull.dds"
	group = je_group_historical_content
	modifiers_while_active = {
		dead_man_of_europe
	}
	immediate = {
		set_variable = { name = tur_leading_government_progress value = 0 }
		tur_set_dead_man_variables = yes
	}

	complete = {
		scope:journal_entry = {
			is_goal_complete = yes
		}
	}

	on_complete = {
		trigger_event = id=dead_man.7
		tur_clear_dead_man_variables = yes
	}

	scripted_button = tur_republican_button
	scripted_button = tur_theocracy_button
	scripted_button = tur_communist_button

	status_desc = {
		first_valid = {
			triggered_desc = {
				desc = status_coup_tur
				trigger = {
					OR = {
						AND = {
							var:theocracy_progress > var:communist_progress
							var:theocracy_progress > var:republican_progress
						}
						AND = {
							var:republican_progress > var:communist_progress
							var:republican_progress > var:theocracy_progress
						}
						AND = {
							var:communist_progress > var:republican_progress
							var:communist_progress > var:theocracy_progress
						}
					}
				}
			}
			triggered_desc = { # Bar not moving, either no supported or not in government
				desc = status_no_coup_tur
				trigger = {
					always = yes
				}
			}
		}
	}

	on_weekly_pulse = {
		events = {
			dead_man.1
		}
		effect = {
			if = {
				limit = {
				tur_weekly_pulse_communist_progress = yes #Calculates how much the communists will get next month. Updates weekly, but is not added until the monthly.
				tur_weekly_pulse_theocracy_progress = yes  #Calculates how much the theocracys will get next month. Updates weekly, but is not added until the monthly.
				tur_weekly_pulse_republican_progress = yes  #Calculates how much the republicans will get next month. Updates weekly, but is not added until the monthly.
				}
				tur_leading_government = yes 	#The progress bar in this JE is always equivalent to the progress of the dynasty that's currently doing best. This scripted effect determines which dynasty that is, and sets fra_leading_dynasty_progress to be equal to that dynasty's progress variable.
			}
		}
	}
	on_monthly_pulse = {
		effect = {
			if = {
				change_variable = { name = republican_progress add = var:republican_progress_next } #On the monthly tick, the value calculated in the fra_weekly_pulse_republican_progress effect is added to the master progress variable.
				change_variable = { name = theocracy_progress add = var:theocracy_progress_next }
				change_variable = { name = communist_progress add = var:communist_progress_next }
				tur_leading_government = yes	#See above - this ensures that the monthly tick will not momentarily send the status loc out of sync with what the bar is representing.
			}
		}
		random_events = {
			400 = 0
			10 = french_pretenders_pulse.2
			10 = french_pretenders_pulse.3
			50 = french_pretenders_pulse.10
			10 = french_pretenders_pulse.11
			10 = french_pretenders_pulse.12
			10 = french_pretenders_pulse.13
			10 = french_pretenders_pulse.14
			10 = french_pretenders_pulse.15
			10 = french_pretenders_pulse.16
			10 = french_pretenders_pulse.17
			10 = french_pretenders_pulse.18
		}
	}

	on_yearly_pulse = {
		random_events = {
		}
	}

	invalid = { 
		NOT = { #Previous "Stamp Out Monarchism" requirement is deprecated - this can now come back from the dead properly upon restoring the monarchy.
			has_law = law_type:law_monarchy
		}
	}

	on_invalid = {
		fra_clear_divided_monarchist_variables = yes #It should not be possible for this JE to somehow be deleted without these variables being cleared.
	}

	weight = 100
	
	current_value = {
		value = root.var:tur_leading_government_progress #Set to always be equal to the leading dynasty's progress by the tur_leading_government effect.
	}

	goal_add_value = {
		value = 480
	}

	progressbar = yes

	should_be_pinned_by_default = yes
}