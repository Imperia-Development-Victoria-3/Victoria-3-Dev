je_imperia_frankfurt_conference = {
	icon = "gfx/interface/icons/event_icons/waving_flag.dds"
	group = je_group_historical_content
	# Voting Starting Options
	scripted_button = je_frankfurt_conference_vote_republic_button
	scripted_button = je_frankfurt_conference_vote_monarchy_button
	# Who gets to vote in Germany?
	scripted_button = je_frankfurt_conference_vote_oligarchy_button
	scripted_button = je_frankfurt_conference_vote_wealth_button
	scripted_button = je_frankfurt_conference_vote_universal_button
	# Optional round - presidential or parliamentary republic
	scripted_button = je_frankfurt_conference_vote_presidential_button
	scripted_button = je_frankfurt_conference_vote_parliamentary_button
	# Claims
	scripted_button = je_frankfurt_conference_lesser_germany_button
	scripted_button = je_frankfurt_conference_greater_germany_button
	scripted_button = je_frankfurt_conference_greater_austria_button
	# Optional round - revolution? Only for universal suffrage republics
	scripted_button = je_frankfurt_conference_internal_focus_button
	scripted_button = je_frankfurt_conference_external_focus_button
	# Leave the conference, wont be pressed to join the new Germany
	scripted_button = je_frankfurt_conference_leave_button
	is_shown_when_inactive = {
		OR = {
			country_has_primary_culture = cu:north_german
			country_has_primary_culture = cu:south_german
		}
	}
	possible = {
		any_country = {
			filter = {
				OR = {
					country_has_primary_culture = cu:north_german
					country_has_primary_culture = cu:south_german
				}
			}
			has_technology_researched = nationalism
			percent >= 0.75
		}
	}
	immediate = {
		# This section pops at the start of the Conference. Used to initialise stuff, like variables
		# Only does so for the owner of Frankfurt, just to be sure
		if = {
			limit = {
				this = p:x11C0A0.owner
			}
			set_global_variable = {
				name = frankfurt_conference_voting_period
				value = 0
			}
			set_global_variable = {
				name = frankfurt_conference_current_vote
				value = 1
			}
			# This one is just initialised here, will be "populated" on completion
			set_global_variable = {
				name = frankfurt_eligible_german_leader_voters
				value = 0
			}
		}
	}
	fail = {
		custom_tooltip = {
			text = left_frankfurt_conference_tt
			has_variable = left_frankfurt_conference
		}
	}
	current_value = {
		value = global_var:frankfurt_conference_voting_period
	}
	on_weekly_pulse = {
		effect = {
			if = {
				limit = {
					this = p:x11C0A0.owner
				}
				change_global_variable = {
					name = frankfurt_conference_voting_period
					add = 1
				}
				## If the voting has run for 12 weeks, start over with a new vote category
				if = {
					limit = {
						global_var:frankfurt_conference_voting_period >= 12
					}
					set_global_variable = {
						name = frankfurt_conference_voting_period
						value = 0
					}
					change_global_variable = {
						name = frankfurt_conference_current_vote
						add = 1
					}
					if = {
						limit = {
							# The presidential/parliamentary debate only takes place if republic and wealth voting won
							OR = {
								frankfurt_conference_has_majority_for_republic = no
								frankfurt_conference_has_majority_for_wealth = no
							}
							global_var:frankfurt_conference_current_vote = 3
						}
						# Skip it if those 2 are NOT true
						change_global_variable = {
							name = frankfurt_conference_current_vote
							add = 1
						}
					}
					if = {
						limit = {
							# The revolutionary focus debate only takes place if republic and universal voting won
							OR = {
								frankfurt_conference_has_majority_for_republic = no
								frankfurt_conference_has_majority_for_universal = no
							}
							global_var:frankfurt_conference_current_vote = 5
						}
						# Skip it if those 2 are NOT true
						change_global_variable = {
							name = frankfurt_conference_current_vote
							add = 1
						}
					}
				}
			}
		}
	}
	complete = {
		# Complete on voting round 7, round 6 is the last chance for countries to leave
		custom_tooltip = {
			text = frankfurt_conference_is_over_tt
			global_var:frankfurt_conference_current_vote = 7
		}
	}
	on_complete = {
		change_global_variable = {
			name = frankfurt_eligible_german_leader_voters
			add = 1
		}
		p:x11C0A0.owner = {
			set_global_variable = {
				name = frankfurt_has_voted_for_german_leader
				value = 0
			}
			set_global_variable = {
				name = frankfurt_has_voted_for_german_leader_1
				value = 0
			}
			set_global_variable = {
				name = frankfurt_has_voted_for_german_leader_2
				value = 0
			}
			set_global_variable = {
				name = frankfurt_has_voted_for_german_leader_3
				value = 0
			}
			# Get 3 big German powers, probably Prussia, Austria and Bavaria?
			ordered_country = {
				limit = {
					OR = {
						country_has_primary_culture = cu:north_german
						country_has_primary_culture = cu:south_german
					}
				}
				order_by = gdp
				position = 0
				set_variable = first_candidate_german_leader
			}
			ordered_country = {
				limit = {
					OR = {
						country_has_primary_culture = cu:north_german
						country_has_primary_culture = cu:south_german
					}
				}
				order_by = gdp
				position = 1
				set_variable = second_candidate_german_leader
			}
			ordered_country = {
				limit = {
					OR = {
						country_has_primary_culture = cu:north_german
						country_has_primary_culture = cu:south_german
					}
				}
				order_by = gdp
				position = 2
				set_variable = third_candidate_german_leader
			}
		}
		trigger_event = {
			id = frankfurt_conference.1
			days = 3
		}
	}
	goal_add_value = {
		add = 12
	}
	progressbar = yes
	weight = 5000
	should_be_pinned_by_default = yes
}

je_imperia_frankfurt_german_consolidation_gutter_king = {
	icon = "gfx/interface/icons/event_icons/waving_flag.dds"
	group = je_group_historical_content
	scripted_button = je_frankfurt_gutter_king_sway_button
	immediate = {
		# Initialise the JE value; hit 0 for failure and 100 for success (For Gutter King)
		set_variable = {
			name = je_imperia_frankfurt_german_consolidation_gutter_king_value
			value = 50
		}
	}
	on_weekly_pulse = {
		effect = {
			# lesser Germany checks
			if = {
				limit = {
					frankfurt_conference_has_majority_for_lesser_germany = yes
				}
				if = {
					limit = {
						any_state_region = {
							filter = {
								custom_tooltip = {
									text = state_is_non_austrian_german_confederation_tt
									OR = {
										is_homeland = cu:north_german
										is_homeland = cu:south_german
									}
									this != s:STATE_ALSACE_LORRAINE
									this != s:STATE_POSEN
									this != s:STATE_WEST_PRUSSIA
									this != s:STATE_EAST_PRUSSIA
									this != s:STATE_TRANSDANUBIA
									any_scope_state = {
										NOT = {
											owner ?= c:AUS
										}
									}
								}
							}
							any_scope_state = {
								owner = {
									OR = {
										this = root
										this = {
											is_subject_of = root
										}
									}
								}
							}
							percent >= 0.75
						}
					}
					change_variable = {
						name = je_imperia_frankfurt_german_consolidation_gutter_king_value
						add = 1
					}
				}
				else = {
					change_variable = {
						name = je_imperia_frankfurt_german_consolidation_gutter_king_value
						subtract = 1
					}
				}
			}
			# Greater germany checks
			if = {
				limit = {
					frankfurt_conference_has_majority_for_greater_germany = yes
				}
				if = {
					limit = {
						any_state_region = {
							filter = {
								custom_tooltip = {
									text = state_is_german_confederation_tt
									OR = {
										is_homeland = cu:north_german
										is_homeland = cu:south_german
									}
									this != s:STATE_ALSACE_LORRAINE
									this != s:STATE_POSEN
									this != s:STATE_WEST_PRUSSIA
									this != s:STATE_EAST_PRUSSIA
									this != s:STATE_TRANSDANUBIA
								}
							}
							any_scope_state = {
								owner = {
									OR = {
										this = root
										this = {
											is_subject_of = root
										}
									}
								}
							}
							percent >= 0.75
						}
					}
					change_variable = {
						name = je_imperia_frankfurt_german_consolidation_gutter_king_value
						add = 1
					}
				}
				else = {
					change_variable = {
						name = je_imperia_frankfurt_german_consolidation_gutter_king_value
						subtract = 1
					}
				}
			}
			# Greater Austria checks
			if = {
				limit = {
					frankfurt_conference_has_majority_for_greater_austria = yes
				}
				if = {
					limit = {
						any_state_region = {
							filter = {
								custom_tooltip = {
									text = state_is_german_owned_tt
									OR = {
										is_homeland = cu:north_german
										is_homeland = cu:south_german
										is_homeland = cu:alemannic
										any_state = {
											owner = {
												OR = {
													country_has_primary_culture = cu:north_german
													country_has_primary_culture = cu:south_german
													country_has_primary_culture = cu:alemannic
												}
												country_is_in_europe = yes
											}
										}
									}
								}
							}
							any_scope_state = {
								owner = {
									OR = {
										this = root
										this = {
											is_subject_of = root
										}
									}
								}
							}
							percent >= 0.75
						}
					}
					change_variable = {
						name = je_imperia_frankfurt_german_consolidation_gutter_king_value
						add = 1
					}
				}
				else = {
					change_variable = {
						name = je_imperia_frankfurt_german_consolidation_gutter_king_value
						subtract = 1
					}
				}
			}
		}
	}
	complete = {
		root.var:je_imperia_frankfurt_german_consolidation_gutter_king_value >= 100
	}
	on_complete = {
		every_subject_or_below = {
			root = {
				annex = prev
			}
		}
	}
	fail = {
		root.var:je_imperia_frankfurt_german_consolidation_gutter_king_value <= 0
	}
	on_fail = {
		every_subject_or_below = {
			limit = {
				is_direct_subject_of = root
			}
			make_independent = yes
			# ... And then add to their original customs union.
			# Will need checks before the sway game to make sure they get in their respective spheres
		}
	}
	current_value = {
		value = root.var:je_imperia_frankfurt_german_consolidation_gutter_king_value
	}
	goal_add_value = {
		add = 50
	}
	on_timeout = {
		every_subject_or_below = {
			limit = {
				is_direct_subject_of = root
			}
			make_independent = yes
			# ... And then add to their original customs union.
			# Will need checks before the sway game to make sure they get in their respective spheres
		}
	}
	# JE will run for 5 years, if balance is still maintained at that point.. Fail it
	progressbar = yes
	timeout = 1826
	weight = 5000
	should_be_pinned_by_default = yes
}

je_imperia_frankfurt_german_consolidation_german_major = {
	icon = "gfx/interface/icons/event_icons/waving_flag.dds"
	group = je_group_historical_content
	scripted_button = je_frankfurt_german_major_sway_button
	immediate = {
		random_country = {
			limit = {
				has_journal_entry = je_imperia_frankfurt_german_consolidation_gutter_king
			}
			save_scope_as = gutter_king_scope
		}
		set_relations = {
			country = scope:gutter_king_scope
			value = -50
		}
	}
	complete = {
		scope:gutter_king_scope.var:je_imperia_frankfurt_german_consolidation_gutter_king_value <= 0
		scope:gutter_king_scope = {
			NOT = {
				has_journal_entry = je_imperia_frankfurt_german_consolidation_gutter_king
			}
		}
	}
	fail = {
		scope:gutter_king_scope.var:je_imperia_frankfurt_german_consolidation_gutter_king_value >= 100
		scope:gutter_king_scope = {
			NOT = {
				has_journal_entry = je_imperia_frankfurt_german_consolidation_gutter_king
			}
		}
	}
}

je_imperia_frankfurt_german_consolidation_german_minor = {
	icon = "gfx/interface/icons/event_icons/waving_flag.dds"
	group = je_group_historical_content
	immediate = {
		random_country = {
			limit = {
				has_journal_entry = je_imperia_frankfurt_german_consolidation_gutter_king
			}
			save_scope_as = gutter_king_scope
		}
	}
	complete = {
		scope:gutter_king_scope.var:je_imperia_frankfurt_german_consolidation_gutter_king_value <= 0
		scope:gutter_king_scope = {
			NOT = {
				has_journal_entry = je_imperia_frankfurt_german_consolidation_gutter_king
			}
		}
	}
	fail = {
		scope:gutter_king_scope.var:je_imperia_frankfurt_german_consolidation_gutter_king_value >= 100
		scope:gutter_king_scope = {
			NOT = {
				has_journal_entry = je_imperia_frankfurt_german_consolidation_gutter_king
			}
		}
	}
}
