on_imperia_monthly_pulse_country = {
	effect = {
		# Land trade capacity
		remove_modifier ?= modifier_land_trade_capacity
		set_local_variable = {
			name = total_infrastructure
			value = 0
		}
		set_local_variable = {
			name = number_of_states
			value = 0
		}
		every_scope_state = {
			change_local_variable = {
				name = total_infrastructure
				add = modifier:state_infrastructure_add
			}
			change_local_variable = {
				name = number_of_states
				add = 1
			}
		}
		if = {
			limit = {
				local_var:number_of_states > 0
			}
			set_local_variable = {
				name = gained_land_trade_capicity
				value = {
					add = local_var:total_infrastructure
					divide = local_var:number_of_states
					subtract = 50	# counting from 50 infrasturucture
					divide = 8	# every 8 infrastructure average is 1 land_trade capacity
				}
			}
			if = {
				limit = {
					local_var:gained_land_trade_capicity >= 1
				}
				add_modifier = {
					name = modifier_land_trade_capacity
					multiplier = local_var:gained_land_trade_capicity
				}
			}
		}
		# Remove / reset imperia infamy modifiers
		remove_modifier ?= imperia_country_infamy_workers
		remove_modifier ?= imperia_country_infamy_capitalist
		every_scope_state = {
			remove_modifier ?= imperia_state_infamy
		}
		if = {
			limit = {
				infamy > 20
			}
			# If theres infamy present...
			if = {
				limit = {
					has_law = law_type:law_command_economy
				}
				# Give command economies their own modifiers
				add_modifier = {
					name = imperia_country_infamy_workers
					multiplier = imperia_infamy_multiplier
				}
			}
			else = {
				# Rest is considered capitalist
				add_modifier = {
					name = imperia_country_infamy_capitalist
					multiplier = imperia_infamy_multiplier
				}
			}
			# No matter what form of economy, give every state a modifier
			every_scope_state = {
				add_modifier = {
					name = imperia_state_infamy
					multiplier = root.imperia_infamy_multiplier
				}
			}
		}
		# Give players more construction if they deserve it
		if = {
			limit = {
				is_player = yes
			}
			# Remove the bonus and resets it (if it exists); here in case a players rank is adjusted
			remove_modifier ?= player_construction_bonus
			if = {
				# Only re-add the modifier if the contents (multiplier) are non-zero
				limit = {
					imperia_player_construction_bonus_multiplier != 0
				}
				add_modifier = {
					name = player_construction_bonus
					multiplier = imperia_player_construction_bonus_multiplier
				}
			}
		}
		else_if = {
			limit = {
				is_player = no
				has_modifier = player_construction_bonus
			}
			remove_modifier = player_construction_bonus
		}
		# Zollverein member construction nerf to prevent them from funding Prussia to the moon
		# Kleinstaaterei is the term for these countries, localised as Kleinstaat
		remove_modifier ?= zollverein_member_construction_penalty
		if = {
			limit = {
				exists = c:PRU
				power_bloc.power_bloc_leader ?= c:PRU
				this != c:PRU
			}
			add_modifier = {
				name = zollverein_member_construction_penalty
			}
		}
		# Random events while congress is in session
		if = {
			limit = {
				has_global_variable = imperia_vienna_congress_in_session
			}
			random = {
				chance = imperia_vienna_congress_monthly_chance_for_random_event
				congress_random_events = yes
			}
		}
		# Give infamy decay malus to China owners
		remove_modifier ?= imperia_china_ownership_infamy
		set_local_variable = {
			name = tmp_imperia_china_infamy_penalty_value
			value = imperia_china_infamy_penalty_value
		}
		if = {
			limit = {
				local_var:tmp_imperia_china_infamy_penalty_value != 0
			}
			add_modifier = {
				name = imperia_china_ownership_infamy
				multiplier = local_var:tmp_imperia_china_infamy_penalty_value
			}
		}
		# Frankfurt Parliament variable cleanup
		# Done here to maintain stability in inter-JE functions
		if = {
			limit = {
				imperia_frankfurt_parliament_is_in_session = no
				# And has at least one of the following variables; meaning they participated in the Parliament
				OR = {
					has_variable = frankfurt_parliament_voted_republic
					has_variable = frankfurt_parliament_voted_monarchy
					has_variable = frankfurt_parliament_voted_wealth_suffrage
					has_variable = frankfurt_parliament_voted_universal_suffrage
					has_variable = frankfurt_parliament_voted_presidential
					has_variable = frankfurt_parliament_voted_parliamentary
				}
				# And the German Revolt is not happening
				any_diplomatic_play = {
					count = 0
					is_diplomatic_play_type = dp_imperia_gutter_german_revolt
				}
			}
			# Assume the thing is over, and variables havent been cleaned up
			# So clean them up
			imperia_frankfurt_parliament_clean_variables = yes
		}
		# Add money transfer variables to countries that doesnt have them yet
		if = {
			limit = {
				NOT = {
					has_variable = imperia_money_transfer_amount
				}
			}
			set_variable = {
				name = imperia_money_transfer_amount
				value = 0
			}
		}
		remove_modifier ?= modifier_state_religion_home_defence_discount
		remove_modifier ?= modifier_state_religion_home_affairs_discount
		remove_modifier ?= modifier_state_religion_education_discount
		remove_modifier ?= modifier_state_religion_health_discount
		if = {
			limit = {
				has_law = law_type:law_state_religion
			}
			if = {
				limit = {
					has_law = law_type:law_faith_orders
				}
				add_modifier = modifier_state_religion_home_defence_discount
			}
			if = {
				limit = {
					has_law = law_type:law_inquisition
				}
				add_modifier = modifier_state_religion_home_affairs_discount
			}
			if = {
				limit = {
					has_law = law_type:law_religious_schools
				}
				add_modifier = modifier_state_religion_education_discount
			}
			if = {
				limit = {
					has_law = law_type:law_charitable_health_system
				}
				add_modifier = modifier_state_religion_health_discount
			}
		}
		# Force-removing IGs from lobbies after a certain amount of time
		every_interest_group = {
			# First subtract from the membership timer (if it exists)
			if = {
				limit = {
					is_member_of_any_lobby = yes
					has_variable = imperia_ig_lobby_membership_timer
				}
				change_variable = {
					name = imperia_ig_lobby_membership_timer
					subtract = 1
				}
			}
			# If the IG is part of a lobby, but doesnt have the timer; create new membership timers
			if = {
				limit = {
					is_member_of_any_lobby = yes
					NOT = {
						has_variable = imperia_ig_lobby_membership_timer
					}
				}
				set_variable = {
					name = imperia_ig_lobby_membership_timer
					# Months in lobby; 10 years so far
					value = 120
				}
			}
			# If the timer hits zero (or below, just in case); remove the IG from every lobby they're a part of
			if = {
				limit = {
					has_variable = imperia_ig_lobby_membership_timer
					var:imperia_ig_lobby_membership_timer <= 0
				}
				# This can be used in both country and in IGs. Is used in IG scope here to scope to lobbies the IG is a part of
				every_political_lobby = {
					remove_lobby_member = prev
				}
			}
			# If the IG is not a member of a lobby, but has the timer-variable; remove the variable
			if = {
				limit = {
					is_member_of_any_lobby = no
					has_variable = imperia_ig_lobby_membership_timer
				}
				remove_variable = imperia_ig_lobby_membership_timer
			}
		}
		## AI Disabling
		# Sets the is_player variable for new/reconnecting players
		if = {
			limit = {
				is_player = yes
				NOT = {
					has_variable = detected_player
				}
			}
			# Removes the AI disabling timer (if its there) in case the player is hotjoining in again.
			remove_variable ?= ai_disabled_timer
			set_variable = detected_player
		}
		# Demolish non-capital statues
		if = {
			limit = {
				any_scope_building = {
					is_building_type = building_power_bloc_statue
					state = {
						is_capital = no
					}
				}
			}
			every_scope_state = {
				limit = {
					has_building = building_power_bloc_statue
					is_capital = no
				}
				remove_building = building_power_bloc_statue
			}
		}
		## Global multicultural levelup cooldowns
		# To prevent back-to-back leveling
		if = {
			limit = {
				# If country has the burgeoning multiculturalism institution
				has_institution = institution_multiculturalism
			}
			if = {
				# First time cooldown here
				limit = {
					NOT = {
						has_global_variable = current_max_multiculturalism_level
					}
				}
				set_global_variable = {
					name = current_max_multiculturalism_level
					value = 1
				}
				set_global_variable = {
					name = multiculturalism_upgrade_cooldown
					years = 10
				}
			}
			if = {
				limit = {
					# If country is currently at the max (or above, I guess) allowed by the global var
					institution_investment_level = {
						institution = institution_multiculturalism
						value >= global_var:current_max_multiculturalism_level
					}
				}
				if = {
					limit = {
						# The cooldown is done
						NOT = {
							has_global_variable = multiculturalism_upgrade_cooldown
						}
					}
					# Increase allowed max, and reset the cooldown
					change_global_variable = {
						name = current_max_multiculturalism_level
						add = 1
					}
					set_global_variable = {
						name = multiculturalism_upgrade_cooldown
						years = 10
					}
				}
				else_if = {
					limit = {
						# If country is expanding the institution rapidly, and has the cooldown active (since its an else_if)
						# Or the institution is above its current max, just to calm my nerves
						OR = {
							expanding_institution = institution_multiculturalism
							institution_investment_level = {
								institution = institution_multiculturalism
								value > global_var:current_max_multiculturalism_level
							}
						}
					}
					# Reset the institution to the max; SHOULD remove the expansion
					save_scope_value_as = {
						name = current_max
						value = global_var:current_max_multiculturalism_level
					}
					set_institution_investment_level = {
						institution = institution_multiculturalism
						value = scope:current_max
					}
				}
			}
		}
	}
	random_events = {
		23 = 0
		1 = dead_man.3
	}
	events = {
		infamy_rebalance.1	#updates provinces each month
	}
}

#scope = country
on_imperia_monthly_pulse_store_infamy = {
	effect = {
		set_variable = {
			name = infamy_on_month_start
			value = infamy
		}
		if = {
			limit = {
				# This should only pop for a singular country each month. Most likely a united China
				has_global_highest_gdp = yes
			}
			imperia_vienna_congress_compile_lists = yes
		}
	}
}

on_imperia_monthly_pulse_ai_congress_voting = {
	effect = {
		if = {
			limit = {
				is_player = no
				has_variable = voting_conference_member
			}
			if = {
				# Else if its a target and they're NOT opposing
				limit = {
					is_congress_target = yes
					NOT = {
						is_target_in_global_variable_list = {
							name = current_congress_members_on_stance_3
							target = this
						}
					}
				}
				# Set to oppose
				set_congress_stance_effect = {
					COUNTRY = this
					STANCE = 3
				}
			}
			if = {
				# If you're the initiator and NOT supporting
				limit = {
					global_var:imperia_vienna_congress_session_initiator = this
					NOT = {
						is_target_in_global_variable_list = {
							name = current_congress_members_on_stance_1
							target = this
						}
					}
				}
				# Set to stance 1: Supporters
				set_congress_stance_effect = {
					COUNTRY = this
					STANCE = 1
				}
			}
			if = {
				# If you're not a target or the initiator
				limit = {
					is_congress_target = no
					global_var:imperia_vienna_congress_session_initiator != this
				}
				# Weights have been divided into 3 pieces
				# --- : -35
				# -35 : 35
				# 35 : ---
				# Dead zones are between +/-45 and +/-25, they will stay on their chosen stance, prevents flip-flopping
				if = {
					# If the voting weight is at or above 45 (and you're not supporting)
					limit = {
						imperia_discord_ai_voting_weight >= 45
						NOT = {
							is_target_in_global_variable_list = {
								name = current_congress_members_on_stance_1
								target = this
							}
						}
					}
					# Set to stance 1: Supporters
					set_congress_stance_effect = {
						COUNTRY = this
						STANCE = 1
					}
				}
				else_if = {
					# Else if the voting weight is at or below -45 (and you're not opposing)
					limit = {
						imperia_discord_ai_voting_weight <= -45
						NOT = {
							is_target_in_global_variable_list = {
								name = current_congress_members_on_stance_3
								target = this
							}
						}
					}
					# Set to stance 3 : Opposers
					set_congress_stance_effect = {
						COUNTRY = this
						STANCE = 3
					}
				}
				else_if = {
					# Else if the voting weight is in the middle (and you're not abstaining)
					limit = {
						OR = {
							AND = {
								is_target_in_global_variable_list = {
									name = current_congress_members_on_stance_1
									target = this
								}
								imperia_discord_ai_voting_weight <= 25
							}
							AND = {
								imperia_discord_ai_voting_weight <= 25
								imperia_discord_ai_voting_weight >= -25
							}
							AND = {
								is_target_in_global_variable_list = {
									name = current_congress_members_on_stance_3
									target = this
								}
								imperia_discord_ai_voting_weight >= -25
							}
						}
						NOT = {
							is_target_in_global_variable_list = {
								name = current_congress_members_on_stance_2
								target = this
							}
						}
					}
					# Set to stance 2: Abstainers
					set_congress_stance_effect = {
						COUNTRY = this
						STANCE = 2
					}
				}
			}
			if = {
				# If you're the initiator, and you can end...
				# (And you're of course still a voting AI)
				limit = {
					global_var:imperia_vienna_congress_session_initiator = this
					NOT = {
						has_global_variable = imperia_vienna_congress_minimum_time
					}
					has_global_variable = imperia_vienna_congress_in_session
				}
				# Have a 20% chance of ending it
				random = {
					chance = 20
					end_congress_scripted_effect = yes
				}
			}
			if = {
				limit = {
					has_global_variable = imperia_vienna_congress_in_session
					or = {
						not = {
							exists = global_var:imperia_vienna_congress_session_target
						}
						not = {
							exists = global_var:imperia_vienna_congress_session_initiator
						}
					}
				}
				remove_global_variable = imperia_vienna_congress_in_session
				remove_global_variable = congress_random_events_enabled
			}
		}
	}
}
